# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rubocop-rails` gem.
# Please instead update this file by running `bin/tapioca gem rubocop-rails`.

# source://rubocop-rails//lib/rubocop/rails.rb#3
module RuboCop; end

# source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#4
module RuboCop::Cop; end

# source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#6
module RuboCop::Cop::ActiveRecordHelper
  extend ::RuboCop::AST::NodePattern::Macros

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#11
  def active_record?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#30
  def external_dependency_checksum; end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#22
  def find_belongs_to(param0); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#18
  def find_set_table_name(param0); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#79
  def foreign_key_of(belongs_to); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#100
  def in_where?(node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#26
  def inherit_active_record_base?(node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#91
  def polymorphic?(belongs_to); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#64
  def resolve_relation_into_column(name:, class_node:, table:); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#41
  def schema; end

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#45
  def table_name(class_node); end
end

# source://rubocop-rails//lib/rubocop/cop/mixin/active_record_helper.rb#9
RuboCop::Cop::ActiveRecordHelper::WHERE_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/mixin/active_record_migrations_helper.rb#6
module RuboCop::Cop::ActiveRecordMigrationsHelper
  extend ::RuboCop::AST::NodePattern::Macros

  # source://rubocop-rails//lib/rubocop/cop/mixin/active_record_migrations_helper.rb#24
  def create_table_with_block?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/mixin/active_record_migrations_helper.rb#19
RuboCop::Cop::ActiveRecordMigrationsHelper::MYSQL_SCHEMA_DEFINITIONS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/mixin/active_record_migrations_helper.rb#14
RuboCop::Cop::ActiveRecordMigrationsHelper::POSTGRES_SCHEMA_DEFINITIONS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/mixin/active_record_migrations_helper.rb#9
RuboCop::Cop::ActiveRecordMigrationsHelper::RAILS_ABSTRACT_SCHEMA_DEFINITIONS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/mixin/active_record_migrations_helper.rb#13
RuboCop::Cop::ActiveRecordMigrationsHelper::RAILS_ABSTRACT_SCHEMA_DEFINITIONS_HELPERS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/mixin/class_send_node_helper.rb#6
module RuboCop::Cop::ClassSendNodeHelper
  # source://rubocop-rails//lib/rubocop/cop/mixin/class_send_node_helper.rb#7
  def class_send_nodes(class_node); end
end

# source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#6
module RuboCop::Cop::EnforceSuperclass
  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#19
  def on_class(node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#25
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#33
  def register_offense(offense_node); end

  class << self
    # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#7
    def included(base); end
  end
end

# source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#6
module RuboCop::Cop::IndexMethod
  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#9
  def on_block(node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#31
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#21
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#95
  def execute_correction(corrector, node, correction); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#72
  def extract_captures(match); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#59
  def handle_possible_offense(node, match, match_desc); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#77
  def new_method_name; end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#40
  def on_bad_each_with_object(_node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#55
  def on_bad_hash_brackets_map(_node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#50
  def on_bad_map_to_h(_node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#45
  def on_bad_to_h(_node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#81
  def prepare_correction(node); end
end

# source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#115
class RuboCop::Cop::IndexMethod::Autocorrection < ::Struct
  def block_node; end
  def block_node=(_); end
  def leading; end
  def leading=(_); end
  def match; end
  def match=(_); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#155
  def set_new_arg_name(transformed_argname, corrector); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#159
  def set_new_body_expression(transforming_body_expr, corrector); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#146
  def set_new_method_name(new_method_name, corrector); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#140
  def strip_prefix_and_suffix(node, corrector); end

  def trailing; end
  def trailing=(_); end

  class << self
    def [](*_arg0); end

    # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#116
    def from_each_with_object(node, match); end

    # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#136
    def from_hash_brackets_map(node, match); end

    # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#124
    def from_map_to_h(node, match); end

    # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#120
    def from_to_h(node, match); end

    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#105
class RuboCop::Cop::IndexMethod::Captures < ::Struct
  # source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#109
  def noop_transformation?; end

  def transformed_argname; end
  def transformed_argname=(_); end
  def transforming_body_expr; end
  def transforming_body_expr=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://rubocop-rails//lib/rubocop/cop/mixin/index_method.rb#7
RuboCop::Cop::IndexMethod::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/mixin/migrations_helper.rb#6
module RuboCop::Cop::MigrationsHelper
  extend ::RuboCop::AST::NodePattern::Macros

  # source://rubocop-rails//lib/rubocop/cop/mixin/migrations_helper.rb#19
  def in_migration?(node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/migrations_helper.rb#9
  def migration_class?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#5
module RuboCop::Cop::Rails; end

# source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#31
class RuboCop::Cop::Rails::ActionControllerFlashBeforeRender < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#44
  def action_controller?(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#36
  def flash_assignment?(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#53
  def on_send(flash_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#40
  def render?(param0); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#106
  def find_ancestor(node, type:); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#69
  def followed_by_render?(flash_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#86
  def inherit_action_controller_base?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#93
  def instance_method_or_block?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#100
  def use_redirect_to?(context); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#34
RuboCop::Cop::Rails::ActionControllerFlashBeforeRender::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/action_controller_flash_before_render.rb#51
RuboCop::Cop::Rails::ActionControllerFlashBeforeRender::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/action_controller_test_case.rb#23
class RuboCop::Cop::Rails::ActionControllerTestCase < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_test_case.rb#31
  def action_controller_test_case?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_controller_test_case.rb#37
  def on_class(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/action_controller_test_case.rb#27
RuboCop::Cop::Rails::ActionControllerTestCase::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#32
class RuboCop::Cop::Rails::ActionFilter < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#72
  def on_block(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#76
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#93
  def bad_methods; end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#82
  def check_method_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#97
  def good_methods; end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#101
  def preferred_method(method); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#54
RuboCop::Cop::Rails::ActionFilter::ACTION_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#38
RuboCop::Cop::Rails::ActionFilter::FILTER_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#36
RuboCop::Cop::Rails::ActionFilter::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/action_filter.rb#70
RuboCop::Cop::Rails::ActionFilter::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#35
class RuboCop::Cop::Rails::ActionOrder < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::VisibilityHelp
  include ::RuboCop::Cop::DefNode
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#43
  def action_declarations(param0, param1); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#45
  def on_class(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#60
  def actions; end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#87
  def add_range(range1, range2); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#83
  def correction_target(def_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#56
  def expected_order; end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#64
  def find_index(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#94
  def range_with_comments(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#106
  def range_with_comments_and_lines(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#68
  def register_offense(previous, current); end

  # source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#110
  def swap_range(corrector, range1, range2); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/action_order.rb#41
RuboCop::Cop::Rails::ActionOrder::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_aliases.rb#19
class RuboCop::Cop::Rails::ActiveRecordAliases < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_aliases.rb#28
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_aliases.rb#28
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_aliases.rb#24
RuboCop::Cop::Rails::ActiveRecordAliases::ALIASES = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_aliases.rb#22
RuboCop::Cop::Rails::ActiveRecordAliases::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_aliases.rb#26
RuboCop::Cop::Rails::ActiveRecordAliases::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#22
class RuboCop::Cop::Rails::ActiveRecordCallbacksOrder < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#51
  def on_class(class_node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#73
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#111
  def begin_pos_with_comment(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#134
  def buffer; end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#95
  def callback?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#85
  def defined_callbacks(class_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#106
  def end_position_for(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#126
  def inline_comment?(comment); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#99
  def source_range_with_comment(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#130
  def start_line_position(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#27
RuboCop::Cop::Rails::ActiveRecordCallbacksOrder::CALLBACKS_IN_ORDER = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#49
RuboCop::Cop::Rails::ActiveRecordCallbacksOrder::CALLBACKS_ORDER_MAP = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_callbacks_order.rb#25
RuboCop::Cop::Rails::ActiveRecordCallbacksOrder::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_override.rb#27
class RuboCop::Cop::Rails::ActiveRecordOverride < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_override.rb#32
  def on_def(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_override.rb#45
  def active_model?(parent_class_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_override.rb#49
  def callback_names(method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_override.rb#63
  def find_parent_class_name(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_record_override.rb#59
  def message(method_name); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_override.rb#30
RuboCop::Cop::Rails::ActiveRecordOverride::ACTIVE_RECORD_CLASSES = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_override.rb#29
RuboCop::Cop::Rails::ActiveRecordOverride::BAD_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/active_record_override.rb#28
RuboCop::Cop::Rails::ActiveRecordOverride::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/active_support_aliases.rb#22
class RuboCop::Cop::Rails::ActiveSupportAliases < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/active_support_aliases.rb#40
  def append(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_support_aliases.rb#40
  def ends_with?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_support_aliases.rb#43
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_support_aliases.rb#40
  def prepend(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/active_support_aliases.rb#40
  def starts_with?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/active_support_aliases.rb#28
RuboCop::Cop::Rails::ActiveSupportAliases::ALIASES = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/active_support_aliases.rb#25
RuboCop::Cop::Rails::ActiveSupportAliases::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/active_support_aliases.rb#26
RuboCop::Cop::Rails::ActiveSupportAliases::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/active_support_on_load.rb#20
class RuboCop::Cop::Rails::ActiveSupportOnLoad < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/active_support_on_load.rb#58
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/active_support_on_load.rb#25
RuboCop::Cop::Rails::ActiveSupportOnLoad::LOAD_HOOKS = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/active_support_on_load.rb#23
RuboCop::Cop::Rails::ActiveSupportOnLoad::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/active_support_on_load.rb#24
RuboCop::Cop::Rails::ActiveSupportOnLoad::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/add_column_index.rb#19
class RuboCop::Cop::Rails::AddColumnIndex < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/add_column_index.rb#27
  def add_column_with_index(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/add_column_index.rb#34
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/add_column_index.rb#55
  def index_range(pair_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/add_column_index.rb#23
RuboCop::Cop::Rails::AddColumnIndex::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/add_column_index.rb#24
RuboCop::Cop::Rails::AddColumnIndex::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/after_commit_override.rb#34
class RuboCop::Cop::Rails::AfterCommitOverride < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ClassSendNodeHelper

  # source://rubocop-rails//lib/rubocop/cop/rails/after_commit_override.rb#47
  def on_class(class_node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/after_commit_override.rb#68
  def after_commit_callback?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/after_commit_override.rb#62
  def each_after_commit_callback(class_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/after_commit_override.rb#72
  def named_callback?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/after_commit_override.rb#39
RuboCop::Cop::Rails::AfterCommitOverride::AFTER_COMMIT_CALLBACKS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/after_commit_override.rb#37
RuboCop::Cop::Rails::AfterCommitOverride::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_controller.rb#23
class RuboCop::Cop::Rails::ApplicationController < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::EnforceSuperclass
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#8
  def class_definition(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#12
  def class_new_definition(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/application_controller.rb#28
RuboCop::Cop::Rails::ApplicationController::BASE_PATTERN = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_controller.rb#26
RuboCop::Cop::Rails::ApplicationController::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_controller.rb#27
RuboCop::Cop::Rails::ApplicationController::SUPERCLASS = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_job.rb#23
class RuboCop::Cop::Rails::ApplicationJob < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::EnforceSuperclass
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/application_job.rb#37
  def autocorrect(node); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#8
  def class_definition(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#12
  def class_new_definition(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/application_job.rb#31
RuboCop::Cop::Rails::ApplicationJob::BASE_PATTERN = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_job.rb#29
RuboCop::Cop::Rails::ApplicationJob::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_job.rb#30
RuboCop::Cop::Rails::ApplicationJob::SUPERCLASS = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_mailer.rb#23
class RuboCop::Cop::Rails::ApplicationMailer < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::EnforceSuperclass
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#8
  def class_definition(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#12
  def class_new_definition(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/application_mailer.rb#31
RuboCop::Cop::Rails::ApplicationMailer::BASE_PATTERN = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_mailer.rb#29
RuboCop::Cop::Rails::ApplicationMailer::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_mailer.rb#30
RuboCop::Cop::Rails::ApplicationMailer::SUPERCLASS = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_record.rb#24
class RuboCop::Cop::Rails::ApplicationRecord < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::EnforceSuperclass
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#8
  def class_definition(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/enforce_superclass.rb#12
  def class_new_definition(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/application_record.rb#32
RuboCop::Cop::Rails::ApplicationRecord::BASE_PATTERN = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_record.rb#30
RuboCop::Cop::Rails::ApplicationRecord::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/application_record.rb#31
RuboCop::Cop::Rails::ApplicationRecord::SUPERCLASS = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/arel_star.rb#26
class RuboCop::Cop::Rails::ArelStar < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/arel_star.rb#37
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/arel_star.rb#33
  def star_bracket?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/arel_star.rb#29
RuboCop::Cop::Rails::ArelStar::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/arel_star.rb#31
RuboCop::Cop::Rails::ArelStar::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/assert_not.rb#16
class RuboCop::Cop::Rails::AssertNot < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/assert_not.rb#22
  def offensive?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/assert_not.rb#24
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/assert_not.rb#36
  def corrected_source(source); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/assert_not.rb#19
RuboCop::Cop::Rails::AssertNot::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/assert_not.rb#20
RuboCop::Cop::Rails::AssertNot::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/attribute_default_block_value.rb#62
class RuboCop::Cop::Rails::AttributeDefaultBlockValue < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/attribute_default_block_value.rb#73
  def attribute(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/attribute_default_block_value.rb#69
  def default_attribute(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/attribute_default_block_value.rb#75
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/attribute_default_block_value.rb#65
RuboCop::Cop::Rails::AttributeDefaultBlockValue::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/attribute_default_block_value.rb#66
RuboCop::Cop::Rails::AttributeDefaultBlockValue::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/attribute_default_block_value.rb#67
RuboCop::Cop::Rails::AttributeDefaultBlockValue::TYPE_OFFENDERS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/belongs_to.rb#50
class RuboCop::Cop::Rails::BelongsTo < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/belongs_to.rb#67
  def match_belongs_to_with_options(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/belongs_to.rb#73
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/belongs_to.rb#65
RuboCop::Cop::Rails::BelongsTo::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/belongs_to.rb#56
RuboCop::Cop::Rails::BelongsTo::SUPERFLOUS_REQUIRE_FALSE_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/belongs_to.rb#60
RuboCop::Cop::Rails::BelongsTo::SUPERFLOUS_REQUIRE_TRUE_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#61
class RuboCop::Cop::Rails::Blank < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#90
  def defining_blank?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#73
  def nil_or_empty?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#88
  def not_present?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#123
  def on_if(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#110
  def on_or(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#96
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#92
  def unless_present?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#140
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#162
  def replacement(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#154
  def unless_condition(node, method_call); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#64
RuboCop::Cop::Rails::Blank::MSG_NIL_OR_EMPTY = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#65
RuboCop::Cop::Rails::Blank::MSG_NOT_PRESENT = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#66
RuboCop::Cop::Rails::Blank::MSG_UNLESS_PRESENT = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/blank.rb#67
RuboCop::Cop::Rails::Blank::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#65
class RuboCop::Cop::Rails::BulkChangeTable < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#119
  def on_def(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#137
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#246
  def add_offense_for_alter_methods(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#256
  def add_offense_for_change_table(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#223
  def call_to_combinable_alter_method?(child_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#227
  def combinable_alter_methods; end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#236
  def combinable_transformations; end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#158
  def count_transformations(send_nodes); end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#177
  def database; end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#181
  def database_from_yaml; end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#192
  def database_yaml; end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#169
  def include_bulk_options?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#150
  def send_nodes_from_change_table_block(body); end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#210
  def support_bulk_alter?; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#261
class RuboCop::Cop::Rails::BulkChangeTable::AlterMethodsRecorder
  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#262
  def initialize; end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#281
  def flush; end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#286
  def offensive_nodes; end

  # source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#268
  def process(new_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#102
RuboCop::Cop::Rails::BulkChangeTable::COMBINABLE_ALTER_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#78
RuboCop::Cop::Rails::BulkChangeTable::COMBINABLE_TRANSFORMATIONS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#76
RuboCop::Cop::Rails::BulkChangeTable::MIGRATION_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#69
RuboCop::Cop::Rails::BulkChangeTable::MSG_FOR_ALTER_METHODS = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#66
RuboCop::Cop::Rails::BulkChangeTable::MSG_FOR_CHANGE_TABLE = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#73
RuboCop::Cop::Rails::BulkChangeTable::MYSQL = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#113
RuboCop::Cop::Rails::BulkChangeTable::MYSQL_COMBINABLE_ALTER_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#111
RuboCop::Cop::Rails::BulkChangeTable::MYSQL_COMBINABLE_TRANSFORMATIONS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#74
RuboCop::Cop::Rails::BulkChangeTable::POSTGRESQL = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#117
RuboCop::Cop::Rails::BulkChangeTable::POSTGRESQL_COMBINABLE_ALTER_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/bulk_change_table.rb#115
RuboCop::Cop::Rails::BulkChangeTable::POSTGRESQL_COMBINABLE_TRANSFORMATIONS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#40
class RuboCop::Cop::Rails::CompactBlank < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#64
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#50
  def reject_with_block?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#58
  def reject_with_block_pass?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#76
  def bad_method?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#95
  def offense_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#105
  def preferred_method(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#91
  def use_hash_value_block_argument?(arguments, receiver_in_block); end

  # source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#87
  def use_single_value_block_argument?(arguments, receiver_in_block); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#45
RuboCop::Cop::Rails::CompactBlank::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/compact_blank.rb#46
RuboCop::Cop::Rails::CompactBlank::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#21
class RuboCop::Cop::Rails::ContentTag < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#31
  def on_new_investigation; end

  # source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#35
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#54
  def allowed_argument?(argument); end

  # source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#81
  def allowed_name?(argument); end

  # source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#72
  def autocorrect(corrector, node, preferred_method); end

  # source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#50
  def corrected_ancestor?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#87
  def correction_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#63
  def register_offense(node, message, preferred_method); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#28
RuboCop::Cop::Rails::ContentTag::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/content_tag.rb#29
RuboCop::Cop::Rails::ContentTag::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/create_table_with_timestamps.rb#43
class RuboCop::Cop::Rails::CreateTableWithTimestamps < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ActiveRecordMigrationsHelper

  # source://rubocop-rails//lib/rubocop/cop/rails/create_table_with_timestamps.rb#49
  def create_table_with_timestamps_proc?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/create_table_with_timestamps.rb#57
  def created_at_or_updated_at_included?(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/create_table_with_timestamps.rb#63
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/create_table_with_timestamps.rb#53
  def timestamps_included?(param0); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/create_table_with_timestamps.rb#79
  def time_columns_included?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/create_table_with_timestamps.rb#46
RuboCop::Cop::Rails::CreateTableWithTimestamps::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/create_table_with_timestamps.rb#47
RuboCop::Cop::Rails::CreateTableWithTimestamps::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/date.rb#53
class RuboCop::Cop::Rails::Date < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#68
  def on_const(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#76
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#76
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#144
  def allow_to_time?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#152
  def bad_days; end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#156
  def bad_methods; end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#99
  def check_date_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#89
  def check_deprecated_methods(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#114
  def extract_method_chain(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#148
  def good_days; end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#160
  def good_methods; end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#120
  def method_send?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#126
  def safe_chain?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/date.rb#132
  def safe_to_time?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/date.rb#62
RuboCop::Cop::Rails::Date::BAD_DAYS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/date.rb#64
RuboCop::Cop::Rails::Date::DEPRECATED_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/date.rb#66
RuboCop::Cop::Rails::Date::DEPRECATED_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/date.rb#56
RuboCop::Cop::Rails::Date::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/date.rb#58
RuboCop::Cop::Rails::Date::MSG_SEND = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/date.rb#60
RuboCop::Cop::Rails::Date::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/default_scope.rb#25
class RuboCop::Cop::Rails::DefaultScope < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/default_scope.rb#33
  def class_method_definition?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/default_scope.rb#37
  def eigenclass_method_definition?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/default_scope.rb#29
  def method_call?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/default_scope.rb#47
  def on_defs(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/default_scope.rb#53
  def on_sclass(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/default_scope.rb#41
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/default_scope.rb#26
RuboCop::Cop::Rails::DefaultScope::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/default_scope.rb#27
RuboCop::Cop::Rails::DefaultScope::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#55
class RuboCop::Cop::Rails::Delegate < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::VisibilityHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#61
  def delegate?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#66
  def on_def(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#90
  def arguments_match?(arg_array, body); end

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#104
  def include_prefix_case?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#100
  def method_name_matches?(method_name, body); end

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#108
  def prefixed_method_name(body); end

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#112
  def private_or_protected_delegation(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#116
  def private_or_protected_inline(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#75
  def register_offense(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#84
  def trivial_delegate?(def_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/delegate.rb#59
RuboCop::Cop::Rails::Delegate::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/delegate_allow_blank.rb#16
class RuboCop::Cop::Rails::DelegateAllowBlank < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate_allow_blank.rb#22
  def allow_blank_option(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/delegate_allow_blank.rb#26
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/delegate_allow_blank.rb#19
RuboCop::Cop::Rails::DelegateAllowBlank::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/delegate_allow_blank.rb#20
RuboCop::Cop::Rails::DelegateAllowBlank::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#35
class RuboCop::Cop::Rails::DeprecatedActiveModelErrorsMethods < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#55
  def any_manipulation?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#81
  def errors_deprecated?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#99
  def messages_details_assignment?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#87
  def messages_details_manipulation?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#108
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#53
  def receiver_matcher_inside_model(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#52
  def receiver_matcher_outside_model(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#74
  def root_assignment?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#65
  def root_manipulation?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#129
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#162
  def model_file?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#138
  def offense_range(node, receiver); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#158
  def receiver_matcher(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#143
  def replacement(node, receiver); end

  # source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#122
  def skip_autocorrect?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#40
RuboCop::Cop::Rails::DeprecatedActiveModelErrorsMethods::AUTOCORRECTABLE_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#41
RuboCop::Cop::Rails::DeprecatedActiveModelErrorsMethods::INCOMPATIBLE_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#43
RuboCop::Cop::Rails::DeprecatedActiveModelErrorsMethods::MANIPULATIVE_METHODS = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/deprecated_active_model_errors_methods.rb#39
RuboCop::Cop::Rails::DeprecatedActiveModelErrorsMethods::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/dot_separated_keys.rb#19
class RuboCop::Cop::Rails::DotSeparatedKeys < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/dot_separated_keys.rb#32
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dot_separated_keys.rb#26
  def translate_with_scope?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/dot_separated_keys.rb#55
  def new_key(key_node, scope_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dot_separated_keys.rb#59
  def scopes(scope_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dot_separated_keys.rb#51
  def should_convert_scope?(scope_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/dot_separated_keys.rb#23
RuboCop::Cop::Rails::DotSeparatedKeys::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/dot_separated_keys.rb#24
RuboCop::Cop::Rails::DotSeparatedKeys::TRANSLATE_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/duplicate_association.rb#23
class RuboCop::Cop::Rails::DuplicateAssociation < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  include ::RuboCop::Cop::ClassSendNodeHelper
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/duplicate_association.rb#30
  def association(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/duplicate_association.rb#34
  def on_class(class_node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/duplicate_association.rb#48
  def offenses(class_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/duplicate_association.rb#28
RuboCop::Cop::Rails::DuplicateAssociation::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/duplicate_scope.rb#19
class RuboCop::Cop::Rails::DuplicateScope < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ClassSendNodeHelper

  # source://rubocop-rails//lib/rubocop/cop/rails/duplicate_scope.rb#28
  def on_class(class_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/duplicate_scope.rb#24
  def scope(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/duplicate_scope.rb#36
  def offenses(class_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/duplicate_scope.rb#22
RuboCop::Cop::Rails::DuplicateScope::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/duration_arithmetic.rb#21
class RuboCop::Cop::Rails::DurationArithmetic < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/duration_arithmetic.rb#58
  def duration?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/duration_arithmetic.rb#43
  def duration_arithmetic_argument?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/duration_arithmetic.rb#78
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/duration_arithmetic.rb#71
  def time_current?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/duration_arithmetic.rb#88
  def corrected_source(operator, duration); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/duration_arithmetic.rb#28
RuboCop::Cop::Rails::DurationArithmetic::DURATIONS = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/duration_arithmetic.rb#24
RuboCop::Cop::Rails::DurationArithmetic::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/duration_arithmetic.rb#26
RuboCop::Cop::Rails::DurationArithmetic::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#42
class RuboCop::Cop::Rails::DynamicFindBy < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ActiveRecordHelper
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#50
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#50
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#72
  def allowed_invocation?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#76
  def allowed_method?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#82
  def allowed_receiver?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#67
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#100
  def autocorrect_argument_keywords(corrector, node, keywords); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#96
  def autocorrect_method_name(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#106
  def column_keywords(method); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#120
  def dynamic_find_by_arguments?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#124
  def dynamic_find_by_arguments_count?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#128
  def dynamic_find_by_arguments_type?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#113
  def static_method_name(method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#89
  def whitelisted?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#48
RuboCop::Cop::Rails::DynamicFindBy::IGNORED_ARGUMENT_TYPES = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#47
RuboCop::Cop::Rails::DynamicFindBy::METHOD_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/dynamic_find_by.rb#46
RuboCop::Cop::Rails::DynamicFindBy::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/eager_evaluation_log_message.rb#23
class RuboCop::Cop::Rails::EagerEvaluationLogMessage < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/eager_evaluation_log_message.rb#29
  def interpolated_string_passed_to_debug(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/eager_evaluation_log_message.rb#44
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/eager_evaluation_log_message.rb#61
  def replacement_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/eager_evaluation_log_message.rb#72
  def replacement_source(node, arguments); end

  class << self
    # source://rubocop-rails//lib/rubocop/cop/rails/eager_evaluation_log_message.rb#40
    def autocorrect_incompatible_with; end
  end
end

# source://rubocop-rails//lib/rubocop/cop/rails/eager_evaluation_log_message.rb#26
RuboCop::Cop::Rails::EagerEvaluationLogMessage::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/eager_evaluation_log_message.rb#27
RuboCop::Cop::Rails::EagerEvaluationLogMessage::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/enum_hash.rb#20
class RuboCop::Cop::Rails::EnumHash < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/enum_hash.rb#30
  def array_pair?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/enum_hash.rb#26
  def enum?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/enum_hash.rb#34
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/enum_hash.rb#53
  def enum_name(key); end

  # source://rubocop-rails//lib/rubocop/cop/rails/enum_hash.rb#62
  def source(elem); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/enum_hash.rb#23
RuboCop::Cop::Rails::EnumHash::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/enum_hash.rb#24
RuboCop::Cop::Rails::EnumHash::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/enum_uniqueness.rb#20
class RuboCop::Cop::Rails::EnumUniqueness < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::Duplication

  # source://rubocop-rails//lib/rubocop/cop/rails/enum_uniqueness.rb#26
  def enum?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/enum_uniqueness.rb#30
  def enum_values(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/enum_uniqueness.rb#34
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/enum_uniqueness.rb#52
  def enum_name(key); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/enum_uniqueness.rb#23
RuboCop::Cop::Rails::EnumUniqueness::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/enum_uniqueness.rb#24
RuboCop::Cop::Rails::EnumUniqueness::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#18
class RuboCop::Cop::Rails::EnvironmentComparison < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#27
  def comparing_str_env_with_rails_env_on_lhs?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#35
  def comparing_str_env_with_rails_env_on_rhs?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#43
  def comparing_sym_env_with_rails_env_on_lhs?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#51
  def comparing_sym_env_with_rails_env_on_rhs?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#59
  def content(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#63
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#84
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#90
  def build_predicate_method(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#102
  def build_predicate_method_for_rails_env_on_lhs(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#108
  def build_predicate_method_for_rails_env_on_rhs(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#98
  def rails_env_on_lhs?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#21
RuboCop::Cop::Rails::EnvironmentComparison::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#25
RuboCop::Cop::Rails::EnvironmentComparison::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/environment_comparison.rb#23
RuboCop::Cop::Rails::EnvironmentComparison::SYM_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/environment_variable_access.rb#37
class RuboCop::Cop::Rails::EnvironmentVariableAccess < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/environment_variable_access.rb#46
  def env_read?(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_variable_access.rb#50
  def env_write?(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_variable_access.rb#41
  def on_const(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_variable_access.rb#57
  def allow_reads?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/environment_variable_access.rb#61
  def allow_writes?; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/environment_variable_access.rb#38
RuboCop::Cop::Rails::EnvironmentVariableAccess::READ_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/environment_variable_access.rb#39
RuboCop::Cop::Rails::EnvironmentVariableAccess::WRITE_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/exit.rb#26
class RuboCop::Cop::Rails::Exit < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle

  # source://rubocop-rails//lib/rubocop/cop/rails/exit.rb#33
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/exit.rb#39
  def offending_node?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/exit.rb#45
  def right_argument_count?(arg_nodes); end

  # source://rubocop-rails//lib/rubocop/cop/rails/exit.rb#51
  def right_receiver?(receiver_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/exit.rb#31
RuboCop::Cop::Rails::Exit::EXPLICIT_RECEIVERS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/exit.rb#29
RuboCop::Cop::Rails::Exit::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/exit.rb#30
RuboCop::Cop::Rails::Exit::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#24
class RuboCop::Cop::Rails::ExpandedDateRange < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#48
  def on_irange(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#67
  def allow?(begin_node, end_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#88
  def any_arguments?(begin_node, end_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#84
  def preferred_method(begin_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#74
  def receiver_source(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#92
  def register_offense(node, preferred_method); end

  # source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#80
  def same_argument?(begin_node, end_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#40
RuboCop::Cop::Rails::ExpandedDateRange::MAPPED_DATE_RANGE_METHODS = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#28
RuboCop::Cop::Rails::ExpandedDateRange::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/expanded_date_range.rb#32
RuboCop::Cop::Rails::ExpandedDateRange::PREFERRED_METHODS = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#28
class RuboCop::Cop::Rails::FilePath < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  include ::RuboCop::Cop::RangeHelp

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#36
  def file_join_nodes?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#48
  def on_dstr(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#59
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#44
  def rails_root_join_nodes?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#40
  def rails_root_nodes?(param0); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#67
  def check_for_file_join_with_rails_root(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#84
  def check_for_rails_root_join_with_slash_separated_path(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#74
  def check_for_rails_root_join_with_string_arguments(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#103
  def message(_range); end

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#97
  def register_offense(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#93
  def string_with_slash?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#33
RuboCop::Cop::Rails::FilePath::MSG_ARGUMENTS = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#32
RuboCop::Cop::Rails::FilePath::MSG_SLASHES = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/file_path.rb#34
RuboCop::Cop::Rails::FilePath::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/find_by.rb#27
class RuboCop::Cop::Rails::FindBy < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by.rb#34
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by.rb#34
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by.rb#58
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by.rb#68
  def ignore_where_first?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by.rb#54
  def offense_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by.rb#48
  def where_method?(receiver); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/find_by.rb#31
RuboCop::Cop::Rails::FindBy::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/find_by.rb#32
RuboCop::Cop::Rails::FindBy::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#19
class RuboCop::Cop::Rails::FindById < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#33
  def find_by?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#40
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#26
  def where_take?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#83
  def build_find_by_bad_method(node, id_value); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#75
  def build_good_method(id_value); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#79
  def build_where_take_bad_method(id_value); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#71
  def find_by_offense_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#58
  def register_offense(range, id_value, bad_method); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#67
  def where_take_offense_range(node, where); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#23
RuboCop::Cop::Rails::FindById::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/find_by_id.rb#24
RuboCop::Cop::Rails::FindById::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/find_each.rb#23
class RuboCop::Cop::Rails::FindEach < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ActiveRecordHelper
  include ::RuboCop::Cop::AllowedMethods
  include ::RuboCop::Cop::AllowedPattern
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/find_each.rb#37
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/find_each.rb#63
  def active_model_error?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_each.rb#59
  def active_model_error_where?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/find_each.rb#51
  def ignored?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/find_each.rb#29
RuboCop::Cop::Rails::FindEach::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/find_each.rb#30
RuboCop::Cop::Rails::FindEach::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/find_each.rb#32
RuboCop::Cop::Rails::FindEach::SCOPE_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#27
class RuboCop::Cop::Rails::FreezeTime < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#48
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#39
  def time_now?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#44
  def zoned_time_now?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#62
  def current_time?(node, method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#68
  def current_time_with_convert?(node, method_name); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#35
RuboCop::Cop::Rails::FreezeTime::CONVERT_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#33
RuboCop::Cop::Rails::FreezeTime::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#34
RuboCop::Cop::Rails::FreezeTime::NOW_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/freeze_time.rb#36
RuboCop::Cop::Rails::FreezeTime::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/has_and_belongs_to_many.rb#14
class RuboCop::Cop::Rails::HasAndBelongsToMany < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/has_and_belongs_to_many.rb#18
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/has_and_belongs_to_many.rb#15
RuboCop::Cop::Rails::HasAndBelongsToMany::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/has_and_belongs_to_many.rb#16
RuboCop::Cop::Rails::HasAndBelongsToMany::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#35
class RuboCop::Cop::Rails::HasManyOrHasOneDependent < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#39
  def active_resource_class?(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#66
  def association_extension_block?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#47
  def association_with_options?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#43
  def association_without_options?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#51
  def dependent_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#78
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#55
  def present_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#72
  def readonly?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#59
  def with_options_block(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#135
  def active_resource?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#102
  def contain_valid_options_in_with_options_block?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#127
  def extract_option_if_kwsplat(options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#88
  def readonly_model?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#114
  def valid_options?(options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#94
  def valid_options_in_with_options_block?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#36
RuboCop::Cop::Rails::HasManyOrHasOneDependent::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/has_many_or_has_one_dependent.rb#37
RuboCop::Cop::Rails::HasManyOrHasOneDependent::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/helper_instance_variable.rb#34
class RuboCop::Cop::Rails::HelperInstanceVariable < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/helper_instance_variable.rb#37
  def form_builder_class?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/helper_instance_variable.rb#43
  def on_ivar(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/helper_instance_variable.rb#49
  def on_ivasgn(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/helper_instance_variable.rb#57
  def inherit_form_builder?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/helper_instance_variable.rb#35
RuboCop::Cop::Rails::HelperInstanceVariable::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#20
class RuboCop::Cop::Rails::HttpPositionalArguments < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#32
  def http_request?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#36
  def kwsplat_hash?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#40
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#93
  def convert_hash_data(data, type); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#107
  def correction(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#120
  def correction_template(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#83
  def format_arg?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#87
  def highlight_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#66
  def in_routing_block?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#70
  def needs_conversion?(data); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#79
  def special_keyword_arg?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#26
RuboCop::Cop::Rails::HttpPositionalArguments::KEYWORD_ARGS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#25
RuboCop::Cop::Rails::HttpPositionalArguments::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#28
RuboCop::Cop::Rails::HttpPositionalArguments::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/http_positional_arguments.rb#27
RuboCop::Cop::Rails::HttpPositionalArguments::ROUTING_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#38
class RuboCop::Cop::Rails::HttpStatus < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#44
  def http_status(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#56
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#52
  def status_code(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#76
  def checker_class; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#124
class RuboCop::Cop::Rails::HttpStatus::NumericStyleChecker
  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#131
  def initialize(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#139
  def message; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#129
  def node; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#135
  def offensive?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#143
  def preferred_style; end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#149
  def number; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#157
  def permitted_symbol?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#153
  def symbol; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#126
RuboCop::Cop::Rails::HttpStatus::NumericStyleChecker::DEFAULT_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#125
RuboCop::Cop::Rails::HttpStatus::NumericStyleChecker::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#127
RuboCop::Cop::Rails::HttpStatus::NumericStyleChecker::PERMITTED_STATUS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#42
RuboCop::Cop::Rails::HttpStatus::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#86
class RuboCop::Cop::Rails::HttpStatus::SymbolicStyleChecker
  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#92
  def initialize(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#100
  def message; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#90
  def node; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#96
  def offensive?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#104
  def preferred_style; end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#118
  def custom_http_status_code?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#114
  def number; end

  # source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#110
  def symbol; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#88
RuboCop::Cop::Rails::HttpStatus::SymbolicStyleChecker::DEFAULT_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/http_status.rb#87
RuboCop::Cop::Rails::HttpStatus::SymbolicStyleChecker::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/i18n_lazy_lookup.rb#31
class RuboCop::Cop::Rails::I18nLazyLookup < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::VisibilityHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_lazy_lookup.rb#43
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_lazy_lookup.rb#39
  def translate_call?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_lazy_lookup.rb#63
  def controller_and_action(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_lazy_lookup.rb#81
  def controller_path(controller); end

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_lazy_lookup.rb#73
  def get_scoped_key(key_node, controller, action); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/i18n_lazy_lookup.rb#35
RuboCop::Cop::Rails::I18nLazyLookup::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/i18n_lazy_lookup.rb#37
RuboCop::Cop::Rails::I18nLazyLookup::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_assignment.rb#21
class RuboCop::Cop::Rails::I18nLocaleAssignment < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_assignment.rb#25
  def i18n_locale_assignment?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_assignment.rb#29
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_assignment.rb#22
RuboCop::Cop::Rails::I18nLocaleAssignment::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_assignment.rb#23
RuboCop::Cop::Rails::I18nLocaleAssignment::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_texts.rb#69
class RuboCop::Cop::Rails::I18nLocaleTexts < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_texts.rb#82
  def flash_assignment?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_texts.rb#86
  def mail_subject(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_texts.rb#90
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_texts.rb#78
  def redirect_to_flash(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_texts.rb#74
  def validation_message(param0); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_texts.rb#70
RuboCop::Cop::Rails::I18nLocaleTexts::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/i18n_locale_texts.rb#72
RuboCop::Cop::Rails::I18nLocaleTexts::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/ignored_columns_assignment.rb#36
class RuboCop::Cop::Rails::IgnoredColumnsAssignment < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/ignored_columns_assignment.rb#42
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/ignored_columns_assignment.rb#39
RuboCop::Cop::Rails::IgnoredColumnsAssignment::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/ignored_columns_assignment.rb#40
RuboCop::Cop::Rails::IgnoredColumnsAssignment::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/ignored_skip_action_filter_option.rb#38
class RuboCop::Cop::Rails::IgnoredSkipActionFilterOption < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/ignored_skip_action_filter_option.rb#47
  def filter_options(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/ignored_skip_action_filter_option.rb#55
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/ignored_skip_action_filter_option.rb#81
  def if_and_except?(options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/ignored_skip_action_filter_option.rb#77
  def if_and_only?(options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/ignored_skip_action_filter_option.rb#71
  def options_hash(options); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/ignored_skip_action_filter_option.rb#45
RuboCop::Cop::Rails::IgnoredSkipActionFilterOption::FILTERS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/ignored_skip_action_filter_option.rb#39
RuboCop::Cop::Rails::IgnoredSkipActionFilterOption::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/ignored_skip_action_filter_option.rb#43
RuboCop::Cop::Rails::IgnoredSkipActionFilterOption::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/index_by.rb#20
class RuboCop::Cop::Rails::IndexBy < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::IndexMethod
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/index_by.rb#24
  def on_bad_each_with_object(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/index_by.rb#47
  def on_bad_hash_brackets_map(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/index_by.rb#38
  def on_bad_map_to_h(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/index_by.rb#31
  def on_bad_to_h(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/index_by.rb#59
  def new_method_name; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/index_with.rb#20
class RuboCop::Cop::Rails::IndexWith < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::IndexMethod
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/index_with.rb#27
  def on_bad_each_with_object(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/index_with.rb#50
  def on_bad_hash_brackets_map(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/index_with.rb#41
  def on_bad_map_to_h(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/index_with.rb#34
  def on_bad_to_h(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/index_with.rb#62
  def new_method_name; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/inquiry.rb#25
class RuboCop::Cop::Rails::Inquiry < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/inquiry.rb#29
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/inquiry.rb#26
RuboCop::Cop::Rails::Inquiry::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/inquiry.rb#27
RuboCop::Cop::Rails::Inquiry::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#140
class RuboCop::Cop::Rails::InverseOf < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#165
  def as_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#145
  def association_recv_arguments(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#153
  def conditions_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#169
  def foreign_key_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#177
  def inverse_of_nil_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#173
  def inverse_of_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#181
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#219
  def options_contain_inverse_of?(options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#149
  def options_from_argument(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#213
  def options_ignoring_inverse_of?(options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#203
  def options_requiring_inverse_of?(options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#161
  def polymorphic_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#230
  def same_context_in_with_options?(arg, recv); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#199
  def scope?(arguments); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#157
  def through_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#223
  def with_options_arguments(recv, node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#246
  def ignore_scopes?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#238
  def message(options); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#142
RuboCop::Cop::Rails::InverseOf::NIL_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#143
RuboCop::Cop::Rails::InverseOf::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/inverse_of.rb#141
RuboCop::Cop::Rails::InverseOf::SPECIFY_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#86
class RuboCop::Cop::Rails::LexicallyScopedActionFilter < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#118
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#107
  def only_or_except_filter_methods(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#155
  def alias_methods(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#146
  def aliased_action_methods(node, defined_methods); end

  # source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#172
  def array_values(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#140
  def defined_action_methods(block); end

  # source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#195
  def message(methods, parent); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#105
RuboCop::Cop::Rails::LexicallyScopedActionFilter::FILTERS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#87
RuboCop::Cop::Rails::LexicallyScopedActionFilter::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/lexically_scoped_action_filter.rb#89
RuboCop::Cop::Rails::LexicallyScopedActionFilter::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#23
class RuboCop::Cop::Rails::LinkToBlank < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#29
  def blank_target?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#33
  def includes_noopener?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#41
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#37
  def rel_node?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#75
  def add_rel(send_node, offense_node, corrector); end

  # source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#69
  def append_to_rel(rel_node, corrector); end

  # source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#56
  def autocorrect(corrector, send_node, node, option_nodes); end

  # source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#88
  def contains_noopener?(value); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#26
RuboCop::Cop::Rails::LinkToBlank::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/link_to_blank.rb#27
RuboCop::Cop::Rails::LinkToBlank::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/mailer_name.rb#30
class RuboCop::Cop::Rails::MailerName < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/mailer_name.rb#42
  def class_definition?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/mailer_name.rb#46
  def class_new_definition?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/mailer_name.rb#35
  def mailer_base_class?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/mailer_name.rb#50
  def on_class(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/mailer_name.rb#58
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/mailer_name.rb#74
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/mailer_name.rb#84
  def mailer_suffix?(mailer_name); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/mailer_name.rb#33
RuboCop::Cop::Rails::MailerName::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#23
class RuboCop::Cop::Rails::MatchRoute < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#30
  def match_method_call?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#34
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#63
  def routes_draw?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#71
  def extract_via(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#90
  def http_method?(method); end

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#111
  def http_method_and_options(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#53
  def register_offense(node, http_method); end

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#94
  def replacement(path_node, options_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#86
  def via_pair(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#67
  def within_routes?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#28
RuboCop::Cop::Rails::MatchRoute::HTTP_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#26
RuboCop::Cop::Rails::MatchRoute::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/match_route.rb#27
RuboCop::Cop::Rails::MatchRoute::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/migration_class_name.rb#21
class RuboCop::Cop::Rails::MigrationClassName < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::MigrationsHelper
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/migration_class_name.rb#27
  def on_class(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/migration_class_name.rb#45
  def basename_without_timestamp_and_suffix(filepath); end

  # source://rubocop-rails//lib/rubocop/cop/rails/migration_class_name.rb#57
  def camelize(word); end

  # source://rubocop-rails//lib/rubocop/cop/rails/migration_class_name.rb#53
  def remove_gem_suffix(file_name); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/migration_class_name.rb#25
RuboCop::Cop::Rails::MigrationClassName::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/negate_include.rb#22
class RuboCop::Cop::Rails::NegateInclude < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/negate_include.rb#28
  def negate_include_call?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/negate_include.rb#32
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/negate_include.rb#25
RuboCop::Cop::Rails::NegateInclude::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/negate_include.rb#26
RuboCop::Cop::Rails::NegateInclude::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#19
class RuboCop::Cop::Rails::NotNullColumn < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#23
  def add_not_null_column?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#27
  def add_not_null_reference?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#35
  def default_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#31
  def null_false?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#39
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#46
  def check_add_column(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#54
  def check_add_reference(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#60
  def check_pairs(pairs); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#20
RuboCop::Cop::Rails::NotNullColumn::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/not_null_column.rb#21
RuboCop::Cop::Rails::NotNullColumn::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/order_by_id.rb#23
class RuboCop::Cop::Rails::OrderById < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp

  # source://rubocop-rails//lib/rubocop/cop/rails/order_by_id.rb#39
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/order_by_id.rb#29
  def order_by_id?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/order_by_id.rb#45
  def offense_range(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/order_by_id.rb#26
RuboCop::Cop::Rails::OrderById::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/order_by_id.rb#27
RuboCop::Cop::Rails::OrderById::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/output.rb#20
class RuboCop::Cop::Rails::Output < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/output.rb#31
  def io_output?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/output.rb#41
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/output.rb#27
  def output?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/output.rb#53
  def match_gvar?(sym); end

  # source://rubocop-rails//lib/rubocop/cop/rails/output.rb#57
  def offense_range(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/output.rb#24
RuboCop::Cop::Rails::Output::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/output.rb#25
RuboCop::Cop::Rails::Output::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/output_safety.rb#65
class RuboCop::Cop::Rails::OutputSafety < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/output_safety.rb#69
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/output_safety.rb#69
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/output_safety.rb#86
  def looks_like_rails_html_safe?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/output_safety.rb#90
  def looks_like_rails_raw?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/output_safety.rb#94
  def looks_like_rails_safe_concat?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/output_safety.rb#82
  def non_interpolated_string?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/output_safety.rb#66
RuboCop::Cop::Rails::OutputSafety::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/output_safety.rb#67
RuboCop::Cop::Rails::OutputSafety::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/pick.rb#27
class RuboCop::Cop::Rails::Pick < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/pick.rb#40
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pick.rb#36
  def pick_candidate?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/pick.rb#58
  def message(receiver); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/pick.rb#31
RuboCop::Cop::Rails::Pick::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/pick.rb#32
RuboCop::Cop::Rails::Pick::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#32
class RuboCop::Cop::Rails::Pluck < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#44
  def on_block(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#44
  def on_numblock(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#40
  def pluck_candidate?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#88
  def message(replacement, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#75
  def offense_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#79
  def register_offense(node, key); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#69
  def use_block_argument_in_key?(block_argument, key); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#63
  def use_one_block_argument?(argument); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/pluck.rb#36
RuboCop::Cop::Rails::Pluck::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/pluck_id.rb#28
class RuboCop::Cop::Rails::PluckId < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  include ::RuboCop::Cop::ActiveRecordHelper
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck_id.rb#40
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck_id.rb#36
  def pluck_id_call?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck_id.rb#53
  def offense_range(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/pluck_id.rb#33
RuboCop::Cop::Rails::PluckId::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/pluck_id.rb#34
RuboCop::Cop::Rails::PluckId::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/pluck_in_where.rb#38
class RuboCop::Cop::Rails::PluckInWhere < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ActiveRecordHelper
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck_in_where.rb#46
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/pluck_in_where.rb#59
  def root_receiver(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/pluck_in_where.rb#43
RuboCop::Cop::Rails::PluckInWhere::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/pluck_in_where.rb#44
RuboCop::Cop::Rails::PluckInWhere::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#17
class RuboCop::Cop::Rails::PluralizationGrammar < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#35
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#53
  def correct_method(method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#96
  def duration_method?(method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#84
  def literal_number?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#49
  def message(number, method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#61
  def offense?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#68
  def plural_method?(method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#80
  def plural_receiver?(number); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#88
  def pluralize(method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#72
  def singular_method?(method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#76
  def singular_receiver?(number); end

  # source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#92
  def singularize(method_name); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#33
RuboCop::Cop::Rails::PluralizationGrammar::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#31
RuboCop::Cop::Rails::PluralizationGrammar::PLURAL_DURATION_METHODS = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#29
RuboCop::Cop::Rails::PluralizationGrammar::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/pluralization_grammar.rb#20
RuboCop::Cop::Rails::PluralizationGrammar::SINGULAR_DURATION_METHODS = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#40
class RuboCop::Cop::Rails::Presence < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#76
  def on_if(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#61
  def redundant_negative_receiver_and_other(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#46
  def redundant_receiver_and_other(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#135
  def build_source_for_or_method(other); end

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#114
  def current(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#100
  def ignore_if_node?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#104
  def ignore_other_node?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#108
  def message(node, receiver, other); end

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#146
  def method_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#94
  def register_offense(node, receiver, other); end

  # source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#122
  def replacement(receiver, other, left_sibling); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/presence.rb#44
RuboCop::Cop::Rails::Presence::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/present.rb#46
class RuboCop::Cop::Rails::Present < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#126
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#54
  def exists_and_not_empty?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#68
  def not_blank?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#86
  def on_and(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#112
  def on_if(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#100
  def on_or(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#74
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#70
  def unless_blank?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#150
  def replacement(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/present.rb#142
  def unless_condition(node, method_call); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/present.rb#50
RuboCop::Cop::Rails::Present::MSG_EXISTS_AND_NOT_EMPTY = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/present.rb#49
RuboCop::Cop::Rails::Present::MSG_NOT_BLANK = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/present.rb#51
RuboCop::Cop::Rails::Present::MSG_UNLESS_BLANK = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/present.rb#52
RuboCop::Cop::Rails::Present::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/rake_environment.rb#33
class RuboCop::Cop::Rails::RakeEnvironment < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/rake_environment.rb#42
  def on_block(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/rake_environment.rb#38
  def task_definition?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/rake_environment.rb#58
  def correct_task_dependency(task_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/rake_environment.rb#66
  def task_name(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/rake_environment.rb#83
  def with_dependencies?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/rake_environment.rb#98
  def with_hash_style_dependencies?(hash_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/rake_environment.rb#36
RuboCop::Cop::Rails::RakeEnvironment::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#37
class RuboCop::Cop::Rails::ReadWriteAttribute < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#50
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#43
  def read_write_attribute?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#73
  def build_message(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#85
  def multi_line_message(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#93
  def node_replacement(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#102
  def read_attribute_replacement(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#81
  def single_line_message(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#61
  def within_shadowing_method?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#106
  def write_attribute_replacement(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#40
RuboCop::Cop::Rails::ReadWriteAttribute::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/read_write_attribute.rb#41
RuboCop::Cop::Rails::ReadWriteAttribute::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_allow_nil.rb#29
class RuboCop::Cop::Rails::RedundantAllowNil < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_allow_nil.rb#39
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_allow_nil.rb#70
  def find_allow_nil_and_allow_blank(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_allow_nil.rb#89
  def node_beg(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_allow_nil.rb#93
  def node_end(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_allow_nil.rb#55
  def register_offense(allow_nil, message); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_allow_nil.rb#35
RuboCop::Cop::Rails::RedundantAllowNil::MSG_ALLOW_NIL_FALSE = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_allow_nil.rb#33
RuboCop::Cop::Rails::RedundantAllowNil::MSG_SAME = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_allow_nil.rb#37
RuboCop::Cop::Rails::RedundantAllowNil::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_foreign_key.rb#27
class RuboCop::Cop::Rails::RedundantForeignKey < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_foreign_key.rb#34
  def association_with_foreign_key(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_foreign_key.rb#40
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_foreign_key.rb#59
  def default_foreign_key(node, association_type, association_name, options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_foreign_key.rb#69
  def find_as_option(options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_foreign_key.rb#55
  def redundant?(node, association_type, association_name, options, foreign_key); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_foreign_key.rb#31
RuboCop::Cop::Rails::RedundantForeignKey::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_foreign_key.rb#32
RuboCop::Cop::Rails::RedundantForeignKey::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#34
class RuboCop::Cop::Rails::RedundantPresenceValidationOnBelongsTo < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#99
  def any_belongs_to?(param0 = T.unsafe(nil), association:); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#125
  def belongs_to?(param0 = T.unsafe(nil), key:, fk:); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#160
  def belongs_to_with_a_matching_fk?(param0 = T.unsafe(nil), param1); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#143
  def belongs_to_without_fk?(param0 = T.unsafe(nil), param1); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#164
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#74
  def optional?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#80
  def optional_option?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#61
  def presence_validation?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#175
  def add_offense_and_correct(node, all_keys, keys, options, presence); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#203
  def belongs_to_for(model_class_node, key); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#235
  def extract_validation_for_keys(corrector, node, keys, options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#191
  def message_for(keys); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#196
  def non_optional_belongs_to(node, keys); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#216
  def remove_keys_from_validation(corrector, node, keys); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#227
  def remove_presence_option(corrector, presence); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#212
  def remove_validation(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#251
  def validation_range(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#39
RuboCop::Cop::Rails::RedundantPresenceValidationOnBelongsTo::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_presence_validation_on_belongs_to.rb#40
RuboCop::Cop::Rails::RedundantPresenceValidationOnBelongsTo::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#57
class RuboCop::Cop::Rails::RedundantReceiverInWithOptions < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#63
  def all_block_nodes_in(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#67
  def all_send_nodes_in(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#71
  def on_block(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#71
  def on_numblock(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#91
  def autocorrect(corrector, send_node, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#110
  def block_argument_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#97
  def redundant_receiver?(send_nodes, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#132
  def same_value?(arg_node, recv_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#122
  def search_begin_pos_of_space_before_block_argument(begin_pos); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_receiver_in_with_options.rb#61
RuboCop::Cop::Rails::RedundantReceiverInWithOptions::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_travel_back.rb#33
class RuboCop::Cop::Rails::RedundantTravelBack < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/redundant_travel_back.rb#43
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_travel_back.rb#40
RuboCop::Cop::Rails::RedundantTravelBack::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/redundant_travel_back.rb#41
RuboCop::Cop::Rails::RedundantTravelBack::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/reflection_class_name.rb#20
class RuboCop::Cop::Rails::ReflectionClassName < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/reflection_class_name.rb#25
  def association_with_reflection(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reflection_class_name.rb#35
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reflection_class_name.rb#31
  def reflection_class_name(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/reflection_class_name.rb#60
  def reflection_class_value?(class_value); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reflection_class_name.rb#46
  def str_assigned?(reflection_class_name); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/reflection_class_name.rb#23
RuboCop::Cop::Rails::ReflectionClassName::ALLOWED_REFLECTION_CLASS_TYPES = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/reflection_class_name.rb#21
RuboCop::Cop::Rails::ReflectionClassName::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/reflection_class_name.rb#22
RuboCop::Cop::Rails::ReflectionClassName::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#31
class RuboCop::Cop::Rails::RefuteMethods < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#59
  def offensive?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#61
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#75
  def bad_method?(method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#87
  def convert_good_method(bad_method); end

  # source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#83
  def offense_message(method_name); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#55
RuboCop::Cop::Rails::RefuteMethods::ASSERT_NOT_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#37
RuboCop::Cop::Rails::RefuteMethods::CORRECTIONS = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#35
RuboCop::Cop::Rails::RefuteMethods::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#54
RuboCop::Cop::Rails::RefuteMethods::REFUTE_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/refute_methods.rb#57
RuboCop::Cop::Rails::RefuteMethods::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#33
class RuboCop::Cop::Rails::RelativeDateConstant < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#40
  def on_casgn(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#48
  def on_masgn(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#64
  def on_or_asgn(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#106
  def relative_date(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#102
  def relative_date_or_assignment(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#72
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#84
  def message(method_name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#92
  def nested_relative_date(node, &callback); end

  # source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#88
  def offense_range(name, value); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#37
RuboCop::Cop::Rails::RelativeDateConstant::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/relative_date_constant.rb#38
RuboCop::Cop::Rails::RelativeDateConstant::RELATIVE_DATE_METHODS = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/render_inline.rb#27
class RuboCop::Cop::Rails::RenderInline < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/render_inline.rb#35
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/render_inline.rb#31
  def render_with_inline_option?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/render_inline.rb#28
RuboCop::Cop::Rails::RenderInline::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/render_inline.rb#29
RuboCop::Cop::Rails::RenderInline::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/render_plain_text.rb#27
class RuboCop::Cop::Rails::RenderPlainText < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/render_plain_text.rb#37
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/render_plain_text.rb#33
  def render_plain_text?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/render_plain_text.rb#56
  def compatible_content_type?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/render_plain_text.rb#52
  def find_content_type(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/render_plain_text.rb#61
  def replacement(rest_options, option_value); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/render_plain_text.rb#30
RuboCop::Cop::Rails::RenderPlainText::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/render_plain_text.rb#31
RuboCop::Cop::Rails::RenderPlainText::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/request_referer.rb#22
class RuboCop::Cop::Rails::RequestReferer < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/request_referer.rb#33
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/request_referer.rb#29
  def referer?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/request_referer.rb#45
  def message(_range); end

  # source://rubocop-rails//lib/rubocop/cop/rails/request_referer.rb#49
  def wrong_method_name; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/request_referer.rb#26
RuboCop::Cop::Rails::RequestReferer::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/request_referer.rb#27
RuboCop::Cop::Rails::RequestReferer::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/require_dependency.rb#20
class RuboCop::Cop::Rails::RequireDependency < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/require_dependency.rb#32
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/require_dependency.rb#28
  def require_dependency_call?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/require_dependency.rb#25
RuboCop::Cop::Rails::RequireDependency::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/require_dependency.rb#26
RuboCop::Cop::Rails::RequireDependency::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/response_parsed_body.rb#19
class RuboCop::Cop::Rails::ResponseParsedBody < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/response_parsed_body.rb#30
  def json_parse_response_body?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/response_parsed_body.rb#41
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/response_parsed_body.rb#51
  def autocorrect(corrector, node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/response_parsed_body.rb#23
RuboCop::Cop::Rails::ResponseParsedBody::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/response_parsed_body.rb#25
RuboCop::Cop::Rails::ResponseParsedBody::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#153
class RuboCop::Cop::Rails::ReversibleMigration < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::MigrationsHelper

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#174
  def change_table_call(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#162
  def drop_table_call(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#158
  def irreversible_schema_statement_call(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#199
  def on_block(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#199
  def on_numblock(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#186
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#166
  def remove_column_call(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#178
  def remove_columns_call(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#170
  def remove_foreign_key_call(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#182
  def remove_index_call(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#314
  def all_hash_key?(args, *keys); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#245
  def check_change_table_node(node, block); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#275
  def check_change_table_offense(receiver, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#217
  def check_drop_table_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#211
  def check_irreversible_schema_statement_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#231
  def check_remove_column_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#257
  def check_remove_columns_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#237
  def check_remove_foreign_key_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#267
  def check_remove_index_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#225
  def check_reversible_hash_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#288
  def reversible_change_table_call?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#302
  def within_change_method?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#308
  def within_reversible_or_up_only_block?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration.rb#156
RuboCop::Cop::Rails::ReversibleMigration::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration_method_definition.rb#45
class RuboCop::Cop::Rails::ReversibleMigrationMethodDefinition < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::MigrationsHelper

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration_method_definition.rb#50
  def change_method?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration_method_definition.rb#58
  def on_class(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration_method_definition.rb#54
  def up_and_down_methods?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/reversible_migration_method_definition.rb#48
RuboCop::Cop::Rails::ReversibleMigrationMethodDefinition::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/root_join_chain.rb#21
class RuboCop::Cop::Rails::RootJoinChain < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/root_join_chain.rb#35
  def join?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_join_chain.rb#39
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_join_chain.rb#30
  def rails_root?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/root_join_chain.rb#52
  def evidence(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/root_join_chain.rb#25
RuboCop::Cop::Rails::RootJoinChain::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/root_join_chain.rb#27
RuboCop::Cop::Rails::RootJoinChain::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#35
class RuboCop::Cop::Rails::RootPathnameMethods < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#146
  def dir_glob?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#163
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#137
  def pathname_method(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#159
  def rails_root?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#151
  def rails_root_pathname?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#186
  def build_path_glob_replacement(path, method); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#194
  def build_path_replacement(path, method, args); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#228
  def enforce_double_quotes?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#179
  def evidence(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#206
  def include_interpolation?(arguments); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#212
  def join_arguments(arguments); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#232
  def string_literals_config; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#41
RuboCop::Cop::Rails::RootPathnameMethods::DIR_METHODS = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#43
RuboCop::Cop::Rails::RootPathnameMethods::FILE_METHODS = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#105
RuboCop::Cop::Rails::RootPathnameMethods::FILE_TEST_METHODS = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#133
RuboCop::Cop::Rails::RootPathnameMethods::FILE_UTILS_METHODS = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#39
RuboCop::Cop::Rails::RootPathnameMethods::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/root_pathname_methods.rb#135
RuboCop::Cop::Rails::RootPathnameMethods::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/root_public_path.rb#19
class RuboCop::Cop::Rails::RootPublicPath < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/root_public_path.rb#35
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/root_public_path.rb#28
  def rails_root_public(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/root_public_path.rb#53
  def public_path?(string); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/root_public_path.rb#22
RuboCop::Cop::Rails::RootPublicPath::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/root_public_path.rb#26
RuboCop::Cop::Rails::RootPublicPath::PATTERN = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/root_public_path.rb#24
RuboCop::Cop::Rails::RootPublicPath::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation.rb#40
class RuboCop::Cop::Rails::SafeNavigation < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRubyVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation.rb#58
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation.rb#50
  def try_call(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation.rb#71
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation.rb#85
  def replacement(method, params); end

  class << self
    # source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation.rb#54
    def autocorrect_incompatible_with; end
  end
end

# source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation.rb#47
RuboCop::Cop::Rails::SafeNavigation::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation.rb#48
RuboCop::Cop::Rails::SafeNavigation::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation_with_blank.rb#31
class RuboCop::Cop::Rails::SafeNavigationWithBlank < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation_with_blank.rb#40
  def on_if(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation_with_blank.rb#36
  def safe_navigation_blank_in_conditional?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/safe_navigation_with_blank.rb#34
RuboCop::Cop::Rails::SafeNavigationWithBlank::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#120
class RuboCop::Cop::Rails::SaveBang < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::NegativeConditional
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#136
  def after_leaving_scope(scope, _variable_table); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#144
  def check_assignment(assignment); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#155
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#155
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#256
  def allowed_receiver?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#314
  def argument?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#221
  def array_parent(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#202
  def assignable_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#198
  def call_to_persisted?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#228
  def check_used_in_condition_or_compound_boolean(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#252
  def checked_immediately?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#248
  def conditional?(parent); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#289
  def const_matches?(const, allowed_const); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#333
  def expected_signature?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#318
  def explicit_return?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#306
  def find_method_with_sibling_index(node, sibling_index = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#211
  def hash_parent(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#296
  def implicit_return?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#236
  def in_condition_or_compound_boolean?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#244
  def operator_or_single_negative?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#328
  def persist_method?(node, methods = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#190
  def persisted_referenced?(assignment); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#266
  def receiver_chain_matches?(node, allowed_receiver); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#171
  def register_offense(node, msg); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#323
  def return_value_assigned?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#182
  def right_assignment_node(assignment); end

  class << self
    # source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#132
    def joining_forces; end
  end
end

# source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#126
RuboCop::Cop::Rails::SaveBang::CREATE_CONDITIONAL_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#125
RuboCop::Cop::Rails::SaveBang::CREATE_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#128
RuboCop::Cop::Rails::SaveBang::CREATE_PERSIST_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#129
RuboCop::Cop::Rails::SaveBang::MODIFY_PERSIST_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#124
RuboCop::Cop::Rails::SaveBang::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/save_bang.rb#130
RuboCop::Cop::Rails::SaveBang::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#24
class RuboCop::Cop::Rails::SchemaComment < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ActiveRecordMigrationsHelper

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#45
  def add_column?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#50
  def add_column_with_comment?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#40
  def comment_present?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#55
  def create_table?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#60
  def create_table_with_comment?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#74
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#65
  def t_column?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#70
  def t_column_with_comment?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#88
  def add_column_without_comment?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#96
  def create_table_column_call_without_comment?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#92
  def create_table_without_comment?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#27
RuboCop::Cop::Rails::SchemaComment::COLUMN_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#30
RuboCop::Cop::Rails::SchemaComment::CREATE_TABLE_COLUMN_METHODS = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#29
RuboCop::Cop::Rails::SchemaComment::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/schema_comment.rb#28
RuboCop::Cop::Rails::SchemaComment::TABLE_MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/scope_args.rb#16
class RuboCop::Cop::Rails::ScopeArgs < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/scope_args.rb#24
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/scope_args.rb#22
  def scope?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/scope_args.rb#19
RuboCop::Cop::Rails::ScopeArgs::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/scope_args.rb#20
RuboCop::Cop::Rails::ScopeArgs::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/short_i18n.rb#41
class RuboCop::Cop::Rails::ShortI18n < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/short_i18n.rb#51
  def long_i18n?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/short_i18n.rb#55
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/short_i18n.rb#45
RuboCop::Cop::Rails::ShortI18n::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/short_i18n.rb#47
RuboCop::Cop::Rails::ShortI18n::PREFERRED_METHODS = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/cop/rails/short_i18n.rb#49
RuboCop::Cop::Rails::ShortI18n::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#38
class RuboCop::Cop::Rails::SkipsModelValidations < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#83
  def initialize(*_arg0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#65
  def good_insert?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#58
  def good_touch?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#72
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#72
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#95
  def allowed_method?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#110
  def allowed_methods; end

  # source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#99
  def forbidden_methods; end

  # source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#91
  def message(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#41
RuboCop::Cop::Rails::SkipsModelValidations::METHODS_WITH_ARGUMENTS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/skips_model_validations.rb#39
RuboCop::Cop::Rails::SkipsModelValidations::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#44
class RuboCop::Cop::Rails::SquishedSQLHeredocs < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::Heredoc
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#53
  def on_heredoc(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#81
  def message(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#63
  def offense_detected?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#75
  def singleline_comments_present?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#67
  def sql_heredoc?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#71
  def using_squish?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#50
RuboCop::Cop::Rails::SquishedSQLHeredocs::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#48
RuboCop::Cop::Rails::SquishedSQLHeredocs::SQL = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#51
RuboCop::Cop::Rails::SquishedSQLHeredocs::SQL_IDENTIFIER_MARKERS = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/squished_sql_heredocs.rb#49
RuboCop::Cop::Rails::SquishedSQLHeredocs::SQUISH = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/strip_heredoc.rb#25
class RuboCop::Cop::Rails::StripHeredoc < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRubyVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/strip_heredoc.rb#34
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/strip_heredoc.rb#44
  def register_offense(node, heredoc); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/strip_heredoc.rb#29
RuboCop::Cop::Rails::StripHeredoc::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/strip_heredoc.rb#30
RuboCop::Cop::Rails::StripHeredoc::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/table_name_assignment.rb#27
class RuboCop::Cop::Rails::TableNameAssignment < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ActiveRecordHelper

  # source://rubocop-rails//lib/rubocop/cop/rails/table_name_assignment.rb#32
  def base_class?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/table_name_assignment.rb#36
  def on_class(class_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/table_name_assignment.rb#30
RuboCop::Cop::Rails::TableNameAssignment::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#42
class RuboCop::Cop::Rails::TimeZone < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#60
  def on_const(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#221
  def acceptable_methods(klass, method_name, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#128
  def attach_timezone_specifier?(date); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#71
  def autocorrect(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#88
  def autocorrect_time_new(node, corrector); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#132
  def build_message(klass, method_name, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#181
  def check_localtime(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#110
  def check_time_node(klass, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#145
  def extract_method_chain(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#205
  def flexible?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#213
  def good_methods; end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#156
  def method_from_time_class?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#167
  def method_send?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#201
  def need_check_localtime?(chain); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#197
  def not_danger_chain?(chain); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#244
  def offset_option_provided?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#235
  def offset_provided?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#97
  def remove_redundant_in_time_zone(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#173
  def safe_method(method_name, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#209
  def strict?; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#56
RuboCop::Cop::Rails::TimeZone::ACCEPTED_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#54
RuboCop::Cop::Rails::TimeZone::DANGEROUS_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#52
RuboCop::Cop::Rails::TimeZone::GOOD_METHODS = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#46
RuboCop::Cop::Rails::TimeZone::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#48
RuboCop::Cop::Rails::TimeZone::MSG_ACCEPTABLE = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#50
RuboCop::Cop::Rails::TimeZone::MSG_LOCALTIME = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone.rb#58
RuboCop::Cop::Rails::TimeZone::TIMEZONE_SPECIFIER = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone_assignment.rb#21
class RuboCop::Cop::Rails::TimeZoneAssignment < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone_assignment.rb#29
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/time_zone_assignment.rb#25
  def time_zone_assignment?(param0 = T.unsafe(nil)); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone_assignment.rb#22
RuboCop::Cop::Rails::TimeZoneAssignment::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/time_zone_assignment.rb#23
RuboCop::Cop::Rails::TimeZoneAssignment::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/to_formatted_s.rb#25
class RuboCop::Cop::Rails::ToFormattedS < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/to_formatted_s.rb#35
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/to_formatted_s.rb#35
  def on_send(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/to_formatted_s.rb#32
RuboCop::Cop::Rails::ToFormattedS::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/to_formatted_s.rb#33
RuboCop::Cop::Rails::ToFormattedS::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/to_s_with_argument.rb#20
class RuboCop::Cop::Rails::ToSWithArgument < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/to_s_with_argument.rb#61
  def on_csend(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/to_s_with_argument.rb#61
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/to_s_with_argument.rb#72
  def rails_extended_to_s?(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/to_s_with_argument.rb#32
RuboCop::Cop::Rails::ToSWithArgument::EXTENDED_FORMAT_TYPES = T.let(T.unsafe(nil), Set)

# source://rubocop-rails//lib/rubocop/cop/rails/to_s_with_argument.rb#55
RuboCop::Cop::Rails::ToSWithArgument::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/to_s_with_argument.rb#57
RuboCop::Cop::Rails::ToSWithArgument::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/top_level_hash_with_indifferent_access.rb#16
class RuboCop::Cop::Rails::TopLevelHashWithIndifferentAccess < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/top_level_hash_with_indifferent_access.rb#32
  def on_const(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/top_level_hash_with_indifferent_access.rb#27
  def top_level_hash_with_indifferent_access?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/top_level_hash_with_indifferent_access.rb#43
  def autocorrect(corrector, node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/top_level_hash_with_indifferent_access.rb#22
RuboCop::Cop::Rails::TopLevelHashWithIndifferentAccess::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/transaction_exit_statement.rb#48
class RuboCop::Cop::Rails::TransactionExitStatement < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/transaction_exit_statement.rb#55
  def exit_statements(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/transaction_exit_statement.rb#67
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/transaction_exit_statement.rb#59
  def rescue_body_return_node?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/transaction_exit_statement.rb#93
  def nested_block?(statement_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/transaction_exit_statement.rb#83
  def statement(statement_node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/transaction_exit_statement.rb#49
RuboCop::Cop::Rails::TransactionExitStatement::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/transaction_exit_statement.rb#53
RuboCop::Cop::Rails::TransactionExitStatement::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#47
class RuboCop::Cop::Rails::UniqBeforePluck < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#59
  def aggressive_node_match(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#57
  def conservative_node_match(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#61
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#84
  def dot_method_begin_pos(method, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#80
  def dot_method_with_whitespace(method, node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#52
RuboCop::Cop::Rails::UniqBeforePluck::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#54
RuboCop::Cop::Rails::UniqBeforePluck::NEWLINE = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#55
RuboCop::Cop::Rails::UniqBeforePluck::PATTERN = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/uniq_before_pluck.rb#53
RuboCop::Cop::Rails::UniqBeforePluck::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#27
class RuboCop::Cop::Rails::UniqueValidationWithoutIndex < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ActiveRecordHelper

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#33
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#159
  def array_node_to_array(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#123
  def class_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#74
  def column_names(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#93
  def column_names_from_scope(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#150
  def condition_hash_part?(pairs, keys:); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#138
  def condition_part?(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#47
  def find_schema_information(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#110
  def find_scope(pairs); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#66
  def include_column_names_in_expression_index?(index, column_names); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#119
  def unfreeze_scope(scope); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#127
  def uniqueness_part(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#57
  def with_index?(klass, table, names); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#30
RuboCop::Cop::Rails::UniqueValidationWithoutIndex::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/unique_validation_without_index.rb#31
RuboCop::Cop::Rails::UniqueValidationWithoutIndex::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#20
class RuboCop::Cop::Rails::UnknownEnv < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#41
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#24
  def rails_env?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#34
  def unknown_environment_equal?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#30
  def unknown_environment_predicate?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#54
  def collect_variable_like_names(_scope); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#88
  def environments; end

  # source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#58
  def message(name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#84
  def unknown_env_name?(name); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#79
  def unknown_env_predicate?(name); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#21
RuboCop::Cop::Rails::UnknownEnv::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/unknown_env.rb#22
RuboCop::Cop::Rails::UnknownEnv::MSG_SIMILAR = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#21
class RuboCop::Cop::Rails::UnusedIgnoredColumns < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ActiveRecordHelper

  # source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#31
  def appended_ignored_columns(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#35
  def column_name(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#27
  def ignored_columns(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#39
  def on_op_asgn(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#39
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#54
  def check_column_existence(column_node, table); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#63
  def class_node(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#67
  def table(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#24
RuboCop::Cop::Rails::UnusedIgnoredColumns::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/unused_ignored_columns.rb#25
RuboCop::Cop::Rails::UnusedIgnoredColumns::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#35
class RuboCop::Cop::Rails::Validation < ::RuboCop::Cop::Base
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#57
  def on_send(node); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#130
  def braced_options(options); end

  # source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#83
  def correct_validate_type(corrector, node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#108
  def correct_validate_type_for_array(corrector, node, arguments, loc); end

  # source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#104
  def correct_validate_type_for_hash(corrector, node, arguments); end

  # source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#126
  def frozen_array_argument?(argument); end

  # source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#73
  def message(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#79
  def preferred_method(method); end

  # source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#122
  def validate_type(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#55
RuboCop::Cop::Rails::Validation::ALLOWLIST = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#38
RuboCop::Cop::Rails::Validation::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#54
RuboCop::Cop::Rails::Validation::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/validation.rb#40
RuboCop::Cop::Rails::Validation::TYPES = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#27
class RuboCop::Cop::Rails::WhereEquals < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#41
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#34
  def where_method_call?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#90
  def build_good_method(column, value); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#71
  def extract_column_and_value(template_node, value_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#67
  def offense_range(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#59
RuboCop::Cop::Rails::WhereEquals::EQ_ANONYMOUS_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#61
RuboCop::Cop::Rails::WhereEquals::EQ_NAMED_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#60
RuboCop::Cop::Rails::WhereEquals::IN_ANONYMOUS_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#62
RuboCop::Cop::Rails::WhereEquals::IN_NAMED_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#63
RuboCop::Cop::Rails::WhereEquals::IS_NULL_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#31
RuboCop::Cop::Rails::WhereEquals::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/where_equals.rb#32
RuboCop::Cop::Rails::WhereEquals::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#51
class RuboCop::Cop::Rails::WhereExists < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::ConfigurableEnforcedStyle
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#62
  def exists_with_args?(param0 = T.unsafe(nil)); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#66
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#58
  def where_exists_call?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#112
  def build_good_method(args); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#120
  def build_good_method_exists(args); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#128
  def build_good_method_where(args); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#98
  def convertable_args?(args); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#104
  def correction_range(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#86
  def exists_style?; end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#90
  def find_offenses(node, &block); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#82
  def where_style?; end
end

# source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#55
RuboCop::Cop::Rails::WhereExists::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/where_exists.rb#56
RuboCop::Cop::Rails::WhereExists::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#17
class RuboCop::Cop::Rails::WhereMissing < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector
  extend ::RuboCop::Cop::TargetRailsVersion

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#34
  def missing_relationship(param0); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#38
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#29
  def where_node_and_argument(param0); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#111
  def message(node, where_argument); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#107
  def multi_condition?(where_arg); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#67
  def register_offense(node, where_node, where_argument, range); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#92
  def remove_where_method(corrector, node, where_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#84
  def replace_range(child); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#78
  def replace_where_method(corrector, where_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#54
  def root_receiver(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#103
  def same_line?(left_joins_node, where_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#63
  def same_relationship?(where, left_joins); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#22
RuboCop::Cop::Rails::WhereMissing::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/where_missing.rb#24
RuboCop::Cop::Rails::WhereMissing::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#26
class RuboCop::Cop::Rails::WhereNot < ::RuboCop::Cop::Base
  include ::RuboCop::Cop::RangeHelp
  extend ::RuboCop::Cop::AutoCorrector

  # source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#40
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#33
  def where_method_call?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#89
  def build_good_method(column, value); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#70
  def extract_column_and_value(template_node, value_node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#66
  def offense_range(node); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#62
RuboCop::Cop::Rails::WhereNot::IS_NOT_NULL_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#30
RuboCop::Cop::Rails::WhereNot::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#58
RuboCop::Cop::Rails::WhereNot::NOT_EQ_ANONYMOUS_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#60
RuboCop::Cop::Rails::WhereNot::NOT_EQ_NAMED_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#59
RuboCop::Cop::Rails::WhereNot::NOT_IN_ANONYMOUS_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#61
RuboCop::Cop::Rails::WhereNot::NOT_IN_NAMED_RE = T.let(T.unsafe(nil), Regexp)

# source://rubocop-rails//lib/rubocop/cop/rails/where_not.rb#31
RuboCop::Cop::Rails::WhereNot::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

# source://rubocop-rails//lib/rubocop/cop/rails/where_not_with_multiple_conditions.rb#25
class RuboCop::Cop::Rails::WhereNotWithMultipleConditions < ::RuboCop::Cop::Base
  # source://rubocop-rails//lib/rubocop/cop/rails/where_not_with_multiple_conditions.rb#33
  def on_send(node); end

  # source://rubocop-rails//lib/rubocop/cop/rails/where_not_with_multiple_conditions.rb#29
  def where_not_call?(param0 = T.unsafe(nil)); end

  private

  # source://rubocop-rails//lib/rubocop/cop/rails/where_not_with_multiple_conditions.rb#46
  def multiple_arguments_hash?(hash); end
end

# source://rubocop-rails//lib/rubocop/cop/rails/where_not_with_multiple_conditions.rb#26
RuboCop::Cop::Rails::WhereNotWithMultipleConditions::MSG = T.let(T.unsafe(nil), String)

# source://rubocop-rails//lib/rubocop/cop/rails/where_not_with_multiple_conditions.rb#27
RuboCop::Cop::Rails::WhereNotWithMultipleConditions::RESTRICT_ON_SEND = T.let(T.unsafe(nil), Array)

module RuboCop::Cop::Style; end

class RuboCop::Cop::Style::MethodCallWithArgsParentheses < ::RuboCop::Cop::Base
  # source://rubocop/1.47.0/lib/rubocop/cop/style/method_call_with_args_parentheses.rb#210
  def on_csend(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/method_call_with_args_parentheses.rb#210
  def on_send(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/method_call_with_args_parentheses.rb#210
  def on_super(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/method_call_with_args_parentheses.rb#210
  def on_yield(node); end

  private

  # source://rubocop/1.47.0/lib/rubocop/cop/style/method_call_with_args_parentheses.rb#219
  def args_begin(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/method_call_with_args_parentheses.rb#228
  def args_end(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/method_call_with_args_parentheses.rb#232
  def args_parenthesized?(node); end

  class << self
    # source://rubocop-rails//lib/rubocop-rails.rb#21
    def autocorrect_incompatible_with; end
  end
end

class RuboCop::Cop::Style::RedundantSelf < ::RuboCop::Cop::Base
  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#59
  def initialize(config = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#67
  def on_and_asgn(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#85
  def on_args(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#119
  def on_block(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#89
  def on_blockarg(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#80
  def on_def(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#80
  def on_defs(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#125
  def on_if(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#103
  def on_in_pattern(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#98
  def on_lvasgn(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#93
  def on_masgn(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#119
  def on_numblock(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#73
  def on_op_asgn(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#67
  def on_or_asgn(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#107
  def on_send(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#125
  def on_until(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#125
  def on_while(node); end

  private

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#181
  def add_lhs_to_local_variables_scopes(rhs, lhs); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#189
  def add_masgn_lhs_variables(rhs, lhs); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#195
  def add_match_var_scopes(in_pattern_node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#143
  def add_scope(node, local_variables = T.unsafe(nil)); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#175
  def allow_self(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#149
  def allowed_send_node?(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#166
  def on_argument(node); end

  # source://rubocop/1.47.0/lib/rubocop/cop/style/redundant_self.rb#158
  def regular_method_call?(node); end

  class << self
    # source://rubocop-rails//lib/rubocop-rails.rb#29
    def autocorrect_incompatible_with; end
  end
end

# source://rubocop-rails//lib/rubocop/cop/mixin/target_rails_version.rb#6
module RuboCop::Cop::TargetRailsVersion
  # source://rubocop-rails//lib/rubocop/cop/mixin/target_rails_version.rb#7
  def minimum_target_rails_version(version); end

  # source://rubocop-rails//lib/rubocop/cop/mixin/target_rails_version.rb#11
  def support_target_rails_version?(version); end
end

# source://rubocop-rails//lib/rubocop/rails.rb#5
module RuboCop::Rails; end

# source://rubocop-rails//lib/rubocop/rails.rb#8
RuboCop::Rails::CONFIG = T.let(T.unsafe(nil), Hash)

# source://rubocop-rails//lib/rubocop/rails.rb#7
RuboCop::Rails::CONFIG_DEFAULT = T.let(T.unsafe(nil), Pathname)

# source://rubocop-rails//lib/rubocop/rails/inject.rb#7
module RuboCop::Rails::Inject
  class << self
    # source://rubocop-rails//lib/rubocop/rails/inject.rb#8
    def defaults!; end
  end
end

# source://rubocop-rails//lib/rubocop/rails.rb#6
RuboCop::Rails::PROJECT_ROOT = T.let(T.unsafe(nil), Pathname)

# source://rubocop-rails//lib/rubocop/rails/schema_loader.rb#7
module RuboCop::Rails::SchemaLoader
  extend ::RuboCop::Rails::SchemaLoader

  # source://rubocop-rails//lib/rubocop/rails/schema_loader.rb#27
  def db_schema_path; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader.rb#15
  def load(target_ruby_version); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader.rb#21
  def reset!; end

  private

  # source://rubocop-rails//lib/rubocop/rails/schema_loader.rb#41
  def load!(target_ruby_version); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader.rb#49
  def parse(path, target_ruby_version); end
end

# source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#176
class RuboCop::Rails::SchemaLoader::AddIndex < ::RuboCop::Rails::SchemaLoader::Index
  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#179
  def initialize(node); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#177
  def table_name; end
end

# source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#116
class RuboCop::Rails::SchemaLoader::Column
  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#119
  def initialize(node); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#117
  def name; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#117
  def not_null; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#117
  def type; end

  private

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#129
  def analyze_keywords!(node); end
end

# source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#140
class RuboCop::Rails::SchemaLoader::Index
  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#143
  def initialize(node); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#141
  def columns; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#141
  def expression; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#141
  def name; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#141
  def unique; end

  private

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#160
  def analyze_keywords!(node); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#152
  def build_columns_or_expr(columns); end
end

# source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#7
class RuboCop::Rails::SchemaLoader::Schema
  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#10
  def initialize(ast); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#8
  def add_indices; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#23
  def add_indices_by(table_name:); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#17
  def table_by(name:); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#8
  def tables; end

  private

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#31
  def build!(ast); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#59
  def each_add_index(ast); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#46
  def each_table(ast); end
end

# source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#70
class RuboCop::Rails::SchemaLoader::Table
  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#73
  def initialize(node); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#71
  def columns; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#71
  def indices; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#71
  def name; end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#79
  def with_column?(name:); end

  private

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#85
  def build_columns(node); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#94
  def build_indices(node); end

  # source://rubocop-rails//lib/rubocop/rails/schema_loader/schema.rb#103
  def each_content(node, &block); end
end

# source://rubocop-rails//lib/rubocop/rails/version.rb#6
module RuboCop::Rails::Version
  class << self
    # source://rubocop-rails//lib/rubocop/rails/version.rb#9
    def document_version; end
  end
end

# source://rubocop-rails//lib/rubocop/rails/version.rb#7
RuboCop::Rails::Version::STRING = T.let(T.unsafe(nil), String)
