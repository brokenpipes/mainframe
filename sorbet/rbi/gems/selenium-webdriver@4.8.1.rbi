# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `selenium-webdriver` gem.
# Please instead update this file by running `bin/tapioca gem selenium-webdriver`.

# source://selenium-webdriver//lib/selenium/webdriver/atoms.rb#20
module Selenium; end

# source://selenium-webdriver//lib/selenium/webdriver/atoms.rb#21
module Selenium::WebDriver
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver.rb#87
    def for(*args); end

    # source://selenium-webdriver//lib/selenium/webdriver.rb#97
    def logger(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver.rb#50
    def root; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#22
class Selenium::WebDriver::ActionBuilder
  include ::Selenium::WebDriver::KeyActions
  include ::Selenium::WebDriver::PointerActions
  include ::Selenium::WebDriver::WheelActions

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#45
  def initialize(bridge, devices: T.unsafe(nil), async: T.unsafe(nil), duration: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#84
  def add_key_input(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#68
  def add_pointer_input(kind, name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#100
  def add_wheel_input(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#211
  def clear_all_actions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#112
  def device(name: T.unsafe(nil), type: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#27
  def devices; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#136
  def key_inputs; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#166
  def pause(device: T.unsafe(nil), duration: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#188
  def pauses(device: T.unsafe(nil), number: T.unsafe(nil), duration: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#201
  def perform; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#126
  def pointer_inputs; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#219
  def release_actions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#146
  def wheel_inputs; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#241
  def add_input(device); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#254
  def deprecate_method(device = T.unsafe(nil), duration = T.unsafe(nil), number = T.unsafe(nil), method: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#231
  def tick(*action_devices); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#22
class Selenium::WebDriver::Alert
  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#23
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#30
  def accept; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#34
  def dismiss; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#38
  def send_keys(keys); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#42
  def text; end
end

# source://selenium-webdriver//lib/selenium/webdriver/atoms.rb#22
module Selenium::WebDriver::Atoms
  private

  # source://selenium-webdriver//lib/selenium/webdriver/atoms.rb#29
  def execute_atom(function_name, *arguments); end

  # source://selenium-webdriver//lib/selenium/webdriver/atoms.rb#25
  def read_atom(function); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi.rb#22
class Selenium::WebDriver::BiDi
  # source://selenium-webdriver//lib/selenium/webdriver/bidi.rb#27
  def initialize(url:); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi.rb#35
  def callbacks; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi.rb#31
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi.rb#51
  def error_message(message); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi.rb#43
  def send_cmd(method, **params); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi.rb#39
  def session; end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#23
class Selenium::WebDriver::BiDi::BaseLogEntry
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#26
  def initialize(level:, text:, timestamp:, stack_trace:); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#24
  def level; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#24
  def level=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#24
  def stack_trace; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#24
  def stack_trace=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#24
  def text; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#24
  def text=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#24
  def timestamp; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/base_log_entry.rb#24
  def timestamp=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context.rb#26
class Selenium::WebDriver::BiDi::BrowsingContext
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context.rb#35
  def initialize(driver:, browsing_context_id: T.unsafe(nil), type: T.unsafe(nil), reference_context: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context.rb#76
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context.rb#65
  def get_tree(max_depth: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context.rb#27
  def id; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context.rb#27
  def id=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context.rb#50
  def navigate(url:, readiness_state: T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context.rb#82
  def create(type, reference_context); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context.rb#29
Selenium::WebDriver::BiDi::BrowsingContext::READINESS_STATE = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#23
class Selenium::WebDriver::BiDi::BrowsingContextInfo
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#26
  def initialize(id:, url:, children:, parent_context:); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#24
  def children; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#24
  def children=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#24
  def id; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#24
  def id=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#24
  def parent_browsing_context; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#24
  def parent_browsing_context=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#24
  def url; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/browsing_context_info.rb#24
  def url=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/log/console_log_entry.rb#23
class Selenium::WebDriver::BiDi::ConsoleLogEntry < ::Selenium::WebDriver::BiDi::GenericLogEntry
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/console_log_entry.rb#26
  def initialize(method:, realm:, args:, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/console_log_entry.rb#24
  def args; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/console_log_entry.rb#24
  def args=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/console_log_entry.rb#24
  def method; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/console_log_entry.rb#24
  def method=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/console_log_entry.rb#24
  def realm; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/console_log_entry.rb#24
  def realm=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/log/filter_by.rb#23
class Selenium::WebDriver::BiDi::FilterBy
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/filter_by.rb#26
  def initialize(level); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/filter_by.rb#24
  def level; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/filter_by.rb#24
  def level=(_arg0); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/filter_by.rb#30
    def log_level(level = T.unsafe(nil)); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/log/generic_log_entry.rb#23
class Selenium::WebDriver::BiDi::GenericLogEntry < ::Selenium::WebDriver::BiDi::BaseLogEntry
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/generic_log_entry.rb#26
  def initialize(level:, text:, timestamp:, type:, stack_trace:); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/generic_log_entry.rb#24
  def type; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/generic_log_entry.rb#24
  def type=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/log/javascript_log_entry.rb#23
class Selenium::WebDriver::BiDi::JavascriptLogEntry < ::Selenium::WebDriver::BiDi::GenericLogEntry
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/javascript_log_entry.rb#26
  def initialize(level:, text:, timestamp:, type:, stack_trace:); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/javascript_log_entry.rb#24
  def type; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log/javascript_log_entry.rb#24
  def type=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#31
class Selenium::WebDriver::BiDi::LogInspector
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#43
  def initialize(driver, browsing_context_ids = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#53
  def on_console_entry(filter_by = T.unsafe(nil), &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#71
  def on_javascript_exception(&block); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#62
  def on_javascript_log(filter_by = T.unsafe(nil), &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#78
  def on_log(filter_by = T.unsafe(nil), &block); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#98
  def check_valid_filter(filter_by); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#104
  def console_log_events(params, filter_by); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#124
  def javascript_log_events(params, filter_by); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#93
  def on(event, &block); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#32
Selenium::WebDriver::BiDi::LogInspector::EVENTS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/bidi/log_inspector.rb#36
Selenium::WebDriver::BiDi::LogInspector::LOG_LEVEL = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/bidi/navigate_result.rb#23
class Selenium::WebDriver::BiDi::NavigateResult
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/navigate_result.rb#26
  def initialize(url:, navigation_id:); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/navigate_result.rb#24
  def navigation_id; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/navigate_result.rb#24
  def navigation_id=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/navigate_result.rb#24
  def url; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/navigate_result.rb#24
  def url=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/session.rb#23
class Selenium::WebDriver::BiDi::Session
  # source://selenium-webdriver//lib/selenium/webdriver/bidi/session.rb#26
  def initialize(bidi); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/session.rb#30
  def status; end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/session.rb#35
  def subscribe(events, browsing_contexts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/bidi/session.rb#42
  def unsubscribe(events, browsing_contexts = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/bidi/session.rb#24
class Selenium::WebDriver::BiDi::Session::Status < ::Struct
  def message; end
  def message=(_); end
  def ready; end
  def ready=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#26
class Selenium::WebDriver::ChildProcess
  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#41
  def initialize(*command); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#79
  def alive?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#34
  def detach; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#34
  def detach=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#83
  def exited?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#48
  def io; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#35
  def io=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#96
  def poll_for_exit(timeout); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#52
  def start; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#63
  def stop(timeout = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#105
  def wait; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#117
  def kill(pid); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#113
  def terminate(pid); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#37
    def build(*command); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#32
Selenium::WebDriver::ChildProcess::POLL_INTERVAL = T.let(T.unsafe(nil), Float)

# source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#30
Selenium::WebDriver::ChildProcess::SIGKILL = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#29
Selenium::WebDriver::ChildProcess::SIGTERM = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/common/child_process.rb#27
class Selenium::WebDriver::ChildProcess::TimeoutError < ::StandardError; end

# source://selenium-webdriver//lib/selenium/webdriver/chrome.rb#24
module Selenium::WebDriver::Chrome
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/chrome.rb#36
    def path; end

    # source://selenium-webdriver//lib/selenium/webdriver/chrome.rb#31
    def path=(path); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#30
class Selenium::WebDriver::Chrome::Driver < ::Selenium::WebDriver::Chromium::Driver
  # source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#31
  def initialize(capabilities: T.unsafe(nil), options: T.unsafe(nil), service: T.unsafe(nil), url: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#39
  def browser; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#45
  def devtools_address; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#49
  def process_options(options, capabilities); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/features.rb#25
module Selenium::WebDriver::Chrome::Features
  include ::Selenium::WebDriver::Chromium::Features

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/features.rb#38
  def commands(command); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/features.rb#28
Selenium::WebDriver::Chrome::Features::CHROME_COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#25
class Selenium::WebDriver::Chrome::Options < ::Selenium::WebDriver::Chromium::Options
  private

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#35
  def binary_path; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#31
  def enable_logging(browser_options); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#27
Selenium::WebDriver::Chrome::Options::BROWSER = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#26
Selenium::WebDriver::Chrome::Options::KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#29
class Selenium::WebDriver::Chrome::Profile < ::Selenium::WebDriver::Chromium::Profile; end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/service.rb#25
class Selenium::WebDriver::Chrome::Service < ::Selenium::WebDriver::Chromium::Service; end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/service.rb#26
Selenium::WebDriver::Chrome::Service::DEFAULT_PORT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/chrome/service.rb#27
Selenium::WebDriver::Chrome::Service::EXECUTABLE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/chrome/service.rb#28
Selenium::WebDriver::Chrome::Service::MISSING_TEXT = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/chrome/service.rb#33
Selenium::WebDriver::Chrome::Service::SHUTDOWN_SUPPORTED = T.let(T.unsafe(nil), TrueClass)

# source://selenium-webdriver//lib/selenium/webdriver/chromium.rb#24
module Selenium::WebDriver::Chromium; end

# source://selenium-webdriver//lib/selenium/webdriver/chromium/driver.rb#28
class Selenium::WebDriver::Chromium::Driver < ::Selenium::WebDriver::Driver
  protected

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/driver.rb#48
  def devtools_url; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/driver.rb#55
  def devtools_version; end
end

# source://selenium-webdriver//lib/selenium/webdriver/chromium/driver.rb#29
Selenium::WebDriver::Chromium::Driver::EXTENSIONS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#23
module Selenium::WebDriver::Chromium::Features
  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#86
  def available_log_types; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#50
  def cast_issue_message; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#46
  def cast_sink_to_use=(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#42
  def cast_sinks; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#34
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#78
  def delete_network_conditions; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#38
  def launch_app(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#91
  def log(type); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#70
  def network_conditions; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#74
  def network_conditions=(conditions); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#82
  def send_command(command_params); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#66
  def set_permission(name, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#58
  def start_cast_desktop_mirroring(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#54
  def start_cast_tab_mirroring(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#62
  def stop_casting(name); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chromium/features.rb#24
Selenium::WebDriver::Chromium::Features::CHROMIUM_COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#23
class Selenium::WebDriver::Chromium::Options < ::Selenium::WebDriver::Options
  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#70
  def initialize(profile: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#143
  def add_argument(arg); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#199
  def add_emulation(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#129
  def add_encoded_extension(encoded); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#100
  def add_extension(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#158
  def add_preference(name, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#215
  def enable_android(package: T.unsafe(nil), serial_number: T.unsafe(nil), use_running_app: T.unsafe(nil), activity: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#44
  def extensions; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#115
  def extensions=(extensions); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#173
  def headless!; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#24
  def logging_prefs; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#24
  def logging_prefs=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#24
  def profile; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#24
  def profile=(_arg0); end

  protected

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#240
  def binary_path; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#255
  def camelize?(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#244
  def encode_extension(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#224
  def process_browser_options(browser_options); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#248
  def validate_extension(path); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chromium/options.rb#27
Selenium::WebDriver::Chromium::Options::CAPABILITIES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#27
class Selenium::WebDriver::Chromium::Profile
  include ::Selenium::WebDriver::ProfileHelper
  extend ::Selenium::WebDriver::ProfileHelper::ClassMethods

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#30
  def initialize(model = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#62
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#57
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#43
  def add_encoded_extension(encoded); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#37
  def add_extension(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#76
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#47
  def directory; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#67
  def layout_on_disk; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#97
  def prefs; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#107
  def prefs_file_for(dir); end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#101
  def read_model_prefs; end

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/profile.rb#90
  def write_prefs_to(dir); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chromium/service.rb#23
class Selenium::WebDriver::Chromium::Service < ::Selenium::WebDriver::Service
  protected

  # source://selenium-webdriver//lib/selenium/webdriver/chromium/service.rb#26
  def extract_service_args(driver_opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#27
class Selenium::WebDriver::Credential
  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#59
  def initialize(id:, resident_credential:, rp_id:, private_key:, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#74
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#56
  def id; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#56
  def private_key; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#56
  def resident_credential; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#56
  def resident_credential?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#56
  def rp_id; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#56
  def sign_count; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#56
  def user_handle; end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#41
    def decode(base64); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#37
    def encode(byte_array); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#45
    def from_json(opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#33
    def non_resident(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/credential.rb#29
    def resident(**opts); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/devtools.rb#22
class Selenium::WebDriver::DevTools
  # source://selenium-webdriver//lib/selenium/webdriver/devtools.rb#31
  def initialize(url:); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools.rb#41
  def callbacks; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools.rb#37
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools.rb#54
  def method_missing(method, *_args); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools.rb#45
  def send_cmd(method, **params); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/devtools.rb#81
  def error_message(error); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools.rb#67
  def respond_to_missing?(method, *_args); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools.rb#74
  def start_session; end
end

# source://selenium-webdriver//lib/selenium/webdriver/devtools/console_event.rb#23
class Selenium::WebDriver::DevTools::ConsoleEvent
  # source://selenium-webdriver//lib/selenium/webdriver/devtools/console_event.rb#26
  def initialize(type:, timestamp:, args:); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/console_event.rb#24
  def args; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/console_event.rb#24
  def args=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/console_event.rb#24
  def timestamp; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/console_event.rb#24
  def timestamp=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/console_event.rb#24
  def type; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/console_event.rb#24
  def type=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/devtools/exception_event.rb#23
class Selenium::WebDriver::DevTools::ExceptionEvent
  # source://selenium-webdriver//lib/selenium/webdriver/devtools/exception_event.rb#26
  def initialize(description:, timestamp:, stacktrace:); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/exception_event.rb#24
  def description; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/exception_event.rb#24
  def description=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/exception_event.rb#24
  def stacktrace; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/exception_event.rb#24
  def stacktrace=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/exception_event.rb#24
  def timestamp; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/exception_event.rb#24
  def timestamp=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#23
class Selenium::WebDriver::DevTools::MutationEvent
  # source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#26
  def initialize(element:, attribute_name:, current_value:, old_value:); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#24
  def attribute_name; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#24
  def attribute_name=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#24
  def current_value; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#24
  def current_value=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#24
  def element; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#24
  def element=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#24
  def old_value; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/mutation_event.rb#24
  def old_value=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#32
class Selenium::WebDriver::DevTools::NetworkInterceptor
  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#41
  def initialize(devtools); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#46
  def intercept(&block); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#167
  def cancelled?(network_id); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#67
  def cancelled_requests; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#127
  def continue_request(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#127
  def continue_response(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#57
  def devtools; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#57
  def devtools=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#155
  def fetch_response_body(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#97
  def intercept_request(id, params, &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#112
  def intercept_response(id, params); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#57
  def lock; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#57
  def lock=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#132
  def mutate_request(request); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#144
  def mutate_response(response); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#62
  def pending_response_requests; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#77
  def request_paused(data, &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#93
  def response?(params); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#71
  def track_cancelled_request(data); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#161
  def with_cancellable_request(network_id); end
end

# source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#35
Selenium::WebDriver::DevTools::NetworkInterceptor::CANNOT_GET_BODY_ON_REDIRECT_ERROR_CODE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/devtools/network_interceptor.rb#39
Selenium::WebDriver::DevTools::NetworkInterceptor::INVALID_INTERCEPTION_ID_ERROR_CODE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#23
class Selenium::WebDriver::DevTools::PinnedScript
  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#26
  def initialize(script); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#35
  def callable; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#24
  def devtools_identifier; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#24
  def devtools_identifier=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#24
  def key; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#24
  def key=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#51
  def remove; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#24
  def script; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#24
  def script=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/pinned_script.rb#43
  def to_json(*_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#23
class Selenium::WebDriver::DevTools::Request
  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#42
  def initialize(id:, url:, method:, headers:, post_data:); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#50
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#24
  def headers; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#24
  def headers=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#25
  def id; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#59
  def inspect; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#24
  def method; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#24
  def method=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#24
  def post_data; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#24
  def post_data=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#24
  def url; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#24
  def url=(_arg0); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/devtools/request.rb#32
    def from(id, params); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#23
class Selenium::WebDriver::DevTools::Response
  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#43
  def initialize(id:, code:, body:, headers:); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#50
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#24
  def body; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#24
  def body=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#24
  def code; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#24
  def code=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#24
  def headers; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#24
  def headers=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#25
  def id; end

  # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#58
  def inspect; end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/devtools/response.rb#32
    def from(id, encoded_body, params); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver.rb#34
class Selenium::WebDriver::Dimension < ::Struct
  def height; end
  def height=(_); end
  def width; end
  def width=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#31
class Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::SearchContext
  include ::Selenium::WebDriver::TakesScreenshot

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#71
  def initialize(bridge: T.unsafe(nil), listener: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#288
  def [](sel); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#126
  def action(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#252
  def add_virtual_authenticator(options); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#72
  def all(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#294
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#298
  def capabilities; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#184
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#144
  def current_url; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#243
  def execute_async_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#224
  def execute_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#57
  def first(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#134
  def get(url); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#79
  def inspect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#117
  def manage; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#99
  def navigate; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#164
  def page_source; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#172
  def quit; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#307
  def ref; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#224
  def script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#90
  def status; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#108
  def switch_to; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#154
  def title; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#208
  def window_handle; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#198
  def window_handles; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#360
  def add_extensions(browser); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#313
  def bridge; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#315
  def create_bridge(caps:, url:, http_client: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#330
  def deprecate_capabilities(capabilities); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#339
  def generate_capabilities(capabilities); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#321
  def process_options(options, capabilities); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#356
  def screenshot; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#351
  def service_url(service); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#44
    def for(browser, opts = T.unsafe(nil)); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_web_storage.rb#26
module Selenium::WebDriver::DriverExtensions; end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/downloads_files.rb#23
module Selenium::WebDriver::DriverExtensions::DownloadsFiles
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/downloads_files.rb#30
  def download_path=(path); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/full_page_screenshot.rb#23
module Selenium::WebDriver::DriverExtensions::FullPageScreenshot
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/full_page_screenshot.rb#30
  def save_full_page_screenshot(path); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/full_page_screenshot.rb#36
  def full_screenshot; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_addons.rb#23
module Selenium::WebDriver::DriverExtensions::HasAddons
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_addons.rb#32
  def install_addon(path, temporary = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_addons.rb#42
  def uninstall_addon(id); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_apple_permissions.rb#23
module Selenium::WebDriver::DriverExtensions::HasApplePermissions
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_apple_permissions.rb#30
  def permissions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_apple_permissions.rb#43
  def permissions=(permissions); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_authentication.rb#23
module Selenium::WebDriver::DriverExtensions::HasAuthentication
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_authentication.rb#42
  def register(username:, password:, uri: T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_authentication.rb#57
  def auth_handlers; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_authentication.rb#61
  def authenticate(request_id, url); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_bidi.rb#23
module Selenium::WebDriver::DriverExtensions::HasBiDi
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_bidi.rb#30
  def bidi; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_cdp.rb#23
module Selenium::WebDriver::DriverExtensions::HasCDP
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_cdp.rb#30
  def execute_cdp(cmd, **params); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_casting.rb#23
module Selenium::WebDriver::DriverExtensions::HasCasting
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_casting.rb#70
  def cast_issue_message; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_casting.rb#40
  def cast_sink_to_use=(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_casting.rb#30
  def cast_sinks; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_casting.rb#60
  def start_cast_desktop_mirroring(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_casting.rb#50
  def start_cast_tab_mirroring(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_casting.rb#80
  def stop_casting(name); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_context.rb#23
module Selenium::WebDriver::DriverExtensions::HasContext
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_context.rb#36
  def context; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_context.rb#32
  def context=(value); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_debugger.rb#23
module Selenium::WebDriver::DriverExtensions::HasDebugger
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_debugger.rb#34
  def attach_debugger; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_devtools.rb#23
module Selenium::WebDriver::DriverExtensions::HasDevTools
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_devtools.rb#30
  def devtools; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_launching.rb#23
module Selenium::WebDriver::DriverExtensions::HasLaunching
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_launching.rb#30
  def launch_app(id); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_location.rb#24
module Selenium::WebDriver::DriverExtensions::HasLocation
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_location.rb#25
  def location; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_location.rb#29
  def location=(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_location.rb#25
  def set_location; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_log_events.rb#23
module Selenium::WebDriver::DriverExtensions::HasLogEvents
  include ::Selenium::WebDriver::Atoms

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_log_events.rb#59
  def on_log_event(kind, &block); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_log_events.rb#76
  def log_console_events; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_log_events.rb#90
  def log_exception_events; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_log_events.rb#72
  def log_listeners; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_log_events.rb#120
  def log_mutation_event(params); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_log_events.rb#110
  def log_mutation_events; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_log_events.rb#137
  def mutation_listener; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_log_events.rb#26
Selenium::WebDriver::DriverExtensions::HasLogEvents::KINDS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_logs.rb#23
module Selenium::WebDriver::DriverExtensions::HasLogs
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_logs.rb#24
  def logs; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_conditions.rb#23
module Selenium::WebDriver::DriverExtensions::HasNetworkConditions
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_conditions.rb#60
  def delete_network_conditions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_conditions.rb#30
  def network_conditions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_conditions.rb#45
  def network_conditions=(conditions); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_connection.rb#24
module Selenium::WebDriver::DriverExtensions::HasNetworkConnection
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_connection.rb#25
  def network_connection_type; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_connection.rb#30
  def network_connection_type=(*_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_interception.rb#23
module Selenium::WebDriver::DriverExtensions::HasNetworkInterception
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_interception.rb#62
  def intercept(&block); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_permissions.rb#23
module Selenium::WebDriver::DriverExtensions::HasPermissions
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_permissions.rb#31
  def add_permission(name, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_permissions.rb#41
  def add_permissions(opt); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_pinned_scripts.rb#23
module Selenium::WebDriver::DriverExtensions::HasPinnedScripts
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_pinned_scripts.rb#49
  def pin_script(script); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_pinned_scripts.rb#30
  def pinned_scripts; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_pinned_scripts.rb#67
  def unpin_script(script); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_session_id.rb#27
module Selenium::WebDriver::DriverExtensions::HasSessionId
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_session_id.rb#33
  def session_id; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_web_storage.rb#27
module Selenium::WebDriver::DriverExtensions::HasWebStorage
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_web_storage.rb#28
  def local_storage; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_web_storage.rb#32
  def session_storage; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/prints_page.rb#23
module Selenium::WebDriver::DriverExtensions::PrintsPage
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/prints_page.rb#50
  def print_page(**options); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/prints_page.rb#35
  def save_print_page(path, **options); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/uploads_files.rb#27
module Selenium::WebDriver::DriverExtensions::UploadsFiles
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/uploads_files.rb#52
  def file_detector=(detector); end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge.rb#24
module Selenium::WebDriver::Edge
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/edge.rb#36
    def path; end

    # source://selenium-webdriver//lib/selenium/webdriver/edge.rb#31
    def path=(path); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge/driver.rb#30
class Selenium::WebDriver::Edge::Driver < ::Selenium::WebDriver::Chromium::Driver
  # source://selenium-webdriver//lib/selenium/webdriver/edge/driver.rb#31
  def initialize(capabilities: T.unsafe(nil), options: T.unsafe(nil), service: T.unsafe(nil), url: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/driver.rb#39
  def browser; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/edge/driver.rb#45
  def devtools_address; end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/driver.rb#49
  def process_options(options, capabilities); end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge/features.rb#25
module Selenium::WebDriver::Edge::Features
  include ::Selenium::WebDriver::Chromium::Features

  # source://selenium-webdriver//lib/selenium/webdriver/edge/features.rb#38
  def commands(command); end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge/features.rb#28
Selenium::WebDriver::Edge::Features::EDGE_COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#25
class Selenium::WebDriver::Edge::Options < ::Selenium::WebDriver::Chromium::Options
  private

  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#35
  def binary_path; end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#31
  def enable_logging(browser_options); end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#27
Selenium::WebDriver::Edge::Options::BROWSER = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#26
Selenium::WebDriver::Edge::Options::KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/edge/profile.rb#29
class Selenium::WebDriver::Edge::Profile < ::Selenium::WebDriver::Chromium::Profile; end

# source://selenium-webdriver//lib/selenium/webdriver/edge/service.rb#25
class Selenium::WebDriver::Edge::Service < ::Selenium::WebDriver::Chromium::Service; end

# source://selenium-webdriver//lib/selenium/webdriver/edge/service.rb#26
Selenium::WebDriver::Edge::Service::DEFAULT_PORT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/edge/service.rb#27
Selenium::WebDriver::Edge::Service::EXECUTABLE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/edge/service.rb#28
Selenium::WebDriver::Edge::Service::MISSING_TEXT = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/edge/service.rb#32
Selenium::WebDriver::Edge::Service::SHUTDOWN_SUPPORTED = T.let(T.unsafe(nil), TrueClass)

# source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#22
class Selenium::WebDriver::Element
  include ::Selenium::WebDriver::SearchContext
  include ::Selenium::WebDriver::TakesScreenshot

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#34
  def initialize(bridge, id); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#43
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#126
  def [](name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#179
  def accessible_name; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#72
  def all(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#169
  def aria_role; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#375
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#126
  def attribute(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#222
  def clear; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#76
  def click; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#275
  def css_value(prop); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#252
  def displayed?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#145
  def dom_attribute(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#232
  def enabled?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#43
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#57
  def first(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#48
  def hash; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#39
  def inspect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#286
  def location; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#306
  def location_once_scrolled_into_view; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#159
  def property(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#296
  def rect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#354
  def ref; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#242
  def selected?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#207
  def send_key(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#207
  def send_keys(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#326
  def shadow_root; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#316
  def size; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#275
  def style(prop); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#260
  def submit; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#90
  def tag_name; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#189
  def text; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#365
  def to_json(*_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#381
  def bridge; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#390
  def screenshot; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#383
  def selectable?; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#23
Selenium::WebDriver::Element::ELEMENT_KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#22
module Selenium::WebDriver::Error
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#28
    def for_error(error); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#67
class Selenium::WebDriver::Error::DetachedShadowRootError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#207
class Selenium::WebDriver::Error::ElementClickInterceptedError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#155
class Selenium::WebDriver::Error::ElementNotInteractableError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#162
class Selenium::WebDriver::Error::InsecureCertificateError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#168
class Selenium::WebDriver::Error::InvalidArgumentError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#111
class Selenium::WebDriver::Error::InvalidCookieDomainError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#74
class Selenium::WebDriver::Error::InvalidElementStateError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#135
class Selenium::WebDriver::Error::InvalidSelectorError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#188
class Selenium::WebDriver::Error::InvalidSessionIdError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#86
class Selenium::WebDriver::Error::JavascriptError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#148
class Selenium::WebDriver::Error::MoveTargetOutOfBoundsError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#123
class Selenium::WebDriver::Error::NoSuchAlertError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#175
class Selenium::WebDriver::Error::NoSuchCookieError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#43
class Selenium::WebDriver::Error::NoSuchElementError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#49
class Selenium::WebDriver::Error::NoSuchFrameError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#105
class Selenium::WebDriver::Error::NoSuchShadowRootError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#99
class Selenium::WebDriver::Error::NoSuchWindowError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#129
class Selenium::WebDriver::Error::ScriptTimeoutError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/remote/server_error.rb#23
class Selenium::WebDriver::Error::ServerError < ::StandardError
  # source://selenium-webdriver//lib/selenium/webdriver/remote/server_error.rb#24
  def initialize(response); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#141
class Selenium::WebDriver::Error::SessionNotCreatedError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#61
class Selenium::WebDriver::Error::StaleElementReferenceError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#92
class Selenium::WebDriver::Error::TimeoutError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#181
class Selenium::WebDriver::Error::UnableToCaptureScreenError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#117
class Selenium::WebDriver::Error::UnableToSetCookieError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#194
class Selenium::WebDriver::Error::UnexpectedAlertOpenError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#55
class Selenium::WebDriver::Error::UnknownCommandError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#80
class Selenium::WebDriver::Error::UnknownError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#200
class Selenium::WebDriver::Error::UnknownMethodError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#214
class Selenium::WebDriver::Error::UnsupportedOperationError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#37
class Selenium::WebDriver::Error::WebDriverError < ::StandardError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#26
module Selenium::WebDriver::FileReaper
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#39
    def <<(file); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#43
    def reap(file); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#51
    def reap!; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#28
    def reap=(_arg0); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#30
    def reap?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#34
    def tmp_files; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#26
module Selenium::WebDriver::Firefox
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#50
    def path; end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#45
    def path=(path); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#38
Selenium::WebDriver::Firefox::DEFAULT_ASSUME_UNTRUSTED_ISSUER = T.let(T.unsafe(nil), TrueClass)

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#39
Selenium::WebDriver::Firefox::DEFAULT_LOAD_NO_FOCUS_LIB = T.let(T.unsafe(nil), FalseClass)

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#36
Selenium::WebDriver::Firefox::DEFAULT_PORT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#37
Selenium::WebDriver::Firefox::DEFAULT_SECURE_SSL = T.let(T.unsafe(nil), FalseClass)

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#43
Selenium::WebDriver::Firefox::DEVTOOLS_VERSION = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#28
class Selenium::WebDriver::Firefox::Driver < ::Selenium::WebDriver::Driver
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#39
  def initialize(capabilities: T.unsafe(nil), options: T.unsafe(nil), service: T.unsafe(nil), url: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#47
  def browser; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#53
  def devtools_url; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#64
  def devtools_version; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#68
  def process_options(options, capabilities); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#29
Selenium::WebDriver::Firefox::Driver::EXTENSIONS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#27
class Selenium::WebDriver::Firefox::Extension
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#30
  def initialize(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#37
  def write_to(extensions_dir); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#93
  def applications_gecko_id(manifest); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#50
  def create_root; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#97
  def name_and_version(manifest); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#63
  def read_id(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#67
  def read_id_from_install_rdf(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#85
  def read_id_from_manifest_json(directory); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#28
Selenium::WebDriver::Firefox::Extension::NAMESPACE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/features.rb#23
module Selenium::WebDriver::Firefox::Features
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/features.rb#32
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/features.rb#60
  def context; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/features.rb#56
  def context=(context); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/features.rb#52
  def full_screenshot; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/features.rb#36
  def install_addon(path, temporary); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/features.rb#48
  def uninstall_addon(id); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/features.rb#24
Selenium::WebDriver::Firefox::Features::FIREFOX_COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#23
class Selenium::WebDriver::Firefox::Options < ::Selenium::WebDriver::Options
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#59
  def initialize(log_level: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#83
  def add_argument(arg); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#98
  def add_preference(name, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#24
  def debugger_address; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#24
  def debugger_address=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#156
  def enable_android(package: T.unsafe(nil), serial_number: T.unsafe(nil), activity: T.unsafe(nil), intent_arguments: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#110
  def headless!; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#136
  def log_level; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#140
  def log_level=(level); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#41
  def profile; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#132
  def profile=(profile); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#183
  def camelize?(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#165
  def process_browser_options(browser_options); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#172
  def process_profile(profile); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#38
Selenium::WebDriver::Firefox::Options::BROWSER = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#29
Selenium::WebDriver::Firefox::Options::CAPABILITIES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#26
Selenium::WebDriver::Firefox::Options::KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#23
class Selenium::WebDriver::Firefox::Profile
  include ::Selenium::WebDriver::ProfileHelper
  extend ::Selenium::WebDriver::ProfileHelper::ClassMethods

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#68
  def initialize(model = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#94
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#119
  def add_extension(path, name = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#38
  def as_json; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#75
  def layout_on_disk; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#37
  def load_no_focus_lib=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#36
  def log_file; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#110
  def log_file=(file); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#36
  def name; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#106
  def port=(port); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#123
  def proxy=(proxy); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#37
  def secure_ssl=(_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#174
  def delete_extensions_cache(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#178
  def delete_lock_files(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#184
  def extension_name_for(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#159
  def install_extensions(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#168
  def read_model_prefs; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#200
  def read_user_prefs(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#150
  def set_manual_proxy_preference(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#188
  def update_user_prefs_in(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#217
  def write_prefs(prefs, path); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#51
    def decoded(json); end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#44
    def from_name(name); end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#40
    def ini; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#28
Selenium::WebDriver::Firefox::Profile::DEFAULT_PREFERENCES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#26
Selenium::WebDriver::Firefox::Profile::VALID_PREFERENCE_TYPES = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#24
class Selenium::WebDriver::Firefox::ProfilesIni
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#25
  def initialize; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#32
  def [](name); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#37
  def refresh; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#44
  def parse; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#66
  def path_for(name, is_relative, path); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/service.rb#23
class Selenium::WebDriver::Firefox::Service < ::Selenium::WebDriver::Service
  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/service.rb#35
  def extract_service_args(driver_opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/service.rb#24
Selenium::WebDriver::Firefox::Service::DEFAULT_PORT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/service.rb#25
Selenium::WebDriver::Firefox::Service::EXECUTABLE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/service.rb#26
Selenium::WebDriver::Firefox::Service::MISSING_TEXT = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/service.rb#31
Selenium::WebDriver::Firefox::Service::SHUTDOWN_SUPPORTED = T.let(T.unsafe(nil), FalseClass)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#24
module Selenium::WebDriver::Firefox::Util
  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#27
  def app_data_path; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#40
  def stringified?(str); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#27
    def app_data_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#40
    def stringified?(str); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#22
module Selenium::WebDriver::HTML5; end

# source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#23
class Selenium::WebDriver::HTML5::LocalStorage
  include ::Enumerable
  include ::Selenium::WebDriver::HTML5::SharedWebStorage

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#29
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#33
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#37
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#45
  def clear; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#41
  def delete(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#53
  def keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#49
  def size; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#23
class Selenium::WebDriver::HTML5::SessionStorage
  include ::Enumerable
  include ::Selenium::WebDriver::HTML5::SharedWebStorage

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#55
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#27
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#31
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#39
  def clear; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#35
  def delete(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#47
  def keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#43
  def size; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#23
module Selenium::WebDriver::HTML5::SharedWebStorage
  include ::Enumerable

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#43
  def each; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#39
  def empty?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#32
  def fetch(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#26
  def has_key?(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#26
  def key?(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#26
  def member?(key); end
end

# source://selenium-webdriver//lib/selenium/webdriver/ie.rb#22
module Selenium::WebDriver::IE; end

# source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#29
class Selenium::WebDriver::IE::Driver < ::Selenium::WebDriver::Driver
  # source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#32
  def initialize(capabilities: T.unsafe(nil), options: T.unsafe(nil), service: T.unsafe(nil), url: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#40
  def browser; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#46
  def process_options(options, capabilities); end
end

# source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#30
Selenium::WebDriver::IE::Driver::EXTENSIONS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#23
class Selenium::WebDriver::IE::Options < ::Selenium::WebDriver::Options
  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#81
  def initialize(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#94
  def add_argument(arg); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#48
  def args; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#100
  def process_browser_options(browser_options); end
end

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
Selenium::WebDriver::IE::Options::BROWSER = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#27
Selenium::WebDriver::IE::Options::CAPABILITIES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#24
Selenium::WebDriver::IE::Options::KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#26
Selenium::WebDriver::IE::Options::SCROLL_BOTTOM = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#25
Selenium::WebDriver::IE::Options::SCROLL_TOP = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/ie/service.rb#23
class Selenium::WebDriver::IE::Service < ::Selenium::WebDriver::Service
  private

  # source://selenium-webdriver//lib/selenium/webdriver/ie/service.rb#35
  def extract_service_args(driver_opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/ie/service.rb#24
Selenium::WebDriver::IE::Service::DEFAULT_PORT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/ie/service.rb#25
Selenium::WebDriver::IE::Service::EXECUTABLE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/ie/service.rb#26
Selenium::WebDriver::IE::Service::MISSING_TEXT = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/ie/service.rb#31
Selenium::WebDriver::IE::Service::SHUTDOWN_SUPPORTED = T.let(T.unsafe(nil), TrueClass)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#22
module Selenium::WebDriver::Interactions
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#33
    def key(name = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#41
    def mouse(name: T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#53
    def none(name = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#45
    def pen(name: T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#37
    def pointer(kind = T.unsafe(nil), name: T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#49
    def touch(name: T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#57
    def wheel(name = T.unsafe(nil)); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#32
class Selenium::WebDriver::Interactions::InputDevice
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#35
  def initialize(name = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#33
  def actions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#40
  def add_action(action); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#46
  def clear_actions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#50
  def create_pause(duration = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#54
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#33
  def name; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#33
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#30
class Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#33
  def initialize(source); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#37
  def assert_source(_source); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#31
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#23
Selenium::WebDriver::Interactions::KEY = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#29
class Selenium::WebDriver::Interactions::KeyInput < ::Selenium::WebDriver::Interactions::InputDevice
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#32
  def initialize(name = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#37
  def create_key_down(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#41
  def create_key_up(key); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#30
Selenium::WebDriver::Interactions::KeyInput::SUBTYPES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#46
class Selenium::WebDriver::Interactions::KeyInput::TypingInteraction < ::Selenium::WebDriver::Interactions::TypingInteraction; end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#25
Selenium::WebDriver::Interactions::NONE = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/none_input.rb#30
class Selenium::WebDriver::Interactions::NoneInput < ::Selenium::WebDriver::Interactions::InputDevice
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/none_input.rb#31
  def initialize(name = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#24
Selenium::WebDriver::Interactions::POINTER = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pause.rb#30
class Selenium::WebDriver::Interactions::Pause < ::Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pause.rb#31
  def initialize(source, duration = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pause.rb#37
  def assert_source(source); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pause.rb#41
  def encode; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_cancel.rb#29
class Selenium::WebDriver::Interactions::PointerCancel < ::Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_cancel.rb#30
  def initialize(source); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_cancel.rb#35
  def assert_source(source); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_cancel.rb#39
  def encode; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_event_properties.rb#23
module Selenium::WebDriver::Interactions::PointerEventProperties
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_event_properties.rb#34
  def process_opts; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_event_properties.rb#48
  def assert_number(num, min, max = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_event_properties.rb#24
Selenium::WebDriver::Interactions::PointerEventProperties::VALID = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#29
class Selenium::WebDriver::Interactions::PointerInput < ::Selenium::WebDriver::Interactions::InputDevice
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#34
  def initialize(kind, name: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#46
  def assert_kind(pointer); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#64
  def create_pointer_cancel; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#56
  def create_pointer_down(button, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#52
  def create_pointer_move(duration: T.unsafe(nil), x: T.unsafe(nil), y: T.unsafe(nil), origin: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#60
  def create_pointer_up(button, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#40
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#32
  def kind; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#30
Selenium::WebDriver::Interactions::PointerInput::KIND = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_move.rb#29
class Selenium::WebDriver::Interactions::PointerMove < ::Selenium::WebDriver::Interactions::Interaction
  include ::Selenium::WebDriver::Interactions::PointerEventProperties

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_move.rb#36
  def initialize(source, duration, x, y, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_move.rb#46
  def assert_source(source); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_move.rb#50
  def encode; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_move.rb#34
Selenium::WebDriver::Interactions::PointerMove::ORIGINS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_move.rb#33
Selenium::WebDriver::Interactions::PointerMove::POINTER = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_move.rb#32
Selenium::WebDriver::Interactions::PointerMove::VIEWPORT = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_press.rb#29
class Selenium::WebDriver::Interactions::PointerPress < ::Selenium::WebDriver::Interactions::Interaction
  include ::Selenium::WebDriver::Interactions::PointerEventProperties

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_press.rb#44
  def initialize(source, direction, button, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_press.rb#52
  def encode; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_press.rb#62
  def assert_button(button); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_press.rb#77
  def assert_direction(direction); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_press.rb#58
  def assert_source(source); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_press.rb#32
Selenium::WebDriver::Interactions::PointerPress::BUTTONS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_press.rb#42
Selenium::WebDriver::Interactions::PointerPress::DIRECTIONS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll.rb#29
class Selenium::WebDriver::Interactions::Scroll < ::Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll.rb#30
  def initialize(source:, origin: T.unsafe(nil), duration: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll.rb#43
  def assert_source(source); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll.rb#47
  def encode; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/typing_interaction.rb#29
class Selenium::WebDriver::Interactions::TypingInteraction < ::Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/typing_interaction.rb#32
  def initialize(source, type, key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/typing_interaction.rb#38
  def assert_source(source); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/typing_interaction.rb#42
  def assert_type(type); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/typing_interaction.rb#48
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/typing_interaction.rb#30
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#26
Selenium::WebDriver::Interactions::WHEEL = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_input.rb#29
class Selenium::WebDriver::Interactions::WheelInput < ::Selenium::WebDriver::Interactions::InputDevice
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_input.rb#30
  def initialize(name = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_input.rb#35
  def create_scroll(**opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#22
module Selenium::WebDriver::KeyActions
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#47
  def key_down(*args, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#74
  def key_up(*args, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#104
  def send_keys(*args, device: T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#136
  def key_action(*args, action: T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#144
  def key_input(name = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#22
module Selenium::WebDriver::Keys
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#114
    def [](key); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#124
    def encode(keys); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#132
    def encode_key(key); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#28
Selenium::WebDriver::Keys::KEYS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#22
class Selenium::WebDriver::LogEntry
  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#25
  def initialize(level, timestamp, message); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#31
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#23
  def level; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#23
  def message; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#43
  def time; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#23
  def timestamp; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#39
  def to_s; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#36
class Selenium::WebDriver::Logger
  extend ::Forwardable

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#51
  def initialize(progname = T.unsafe(nil), ignored: T.unsafe(nil)); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def close(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def debug(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def debug?(*args, **_arg1, &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#123
  def deprecate(old, new = T.unsafe(nil), id: T.unsafe(nil), reference: T.unsafe(nil), &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def error(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def error?(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def fatal(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def fatal?(*args, **_arg1, &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#86
  def ignore(id); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def info(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def info?(*args, **_arg1, &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#77
  def io; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def level(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def level=(*args, **_arg1, &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#62
  def output=(io); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#97
  def warn(message, id: T.unsafe(nil)); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def warn?(*args, **_arg1, &block); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#142
  def create_logger(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#153
  def default_level; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/logs.rb#22
class Selenium::WebDriver::Logs
  # source://selenium-webdriver//lib/selenium/webdriver/common/logs.rb#27
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logs.rb#35
  def available_types; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logs.rb#31
  def get(type); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#22
class Selenium::WebDriver::Manager
  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#27
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#45
  def add_cookie(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#99
  def all_cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#71
  def cookie_named(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#89
  def delete_all_cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#81
  def delete_cookie(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#103
  def timeouts; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#107
  def window; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#136
  def convert_cookie(cookie); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#115
  def datetime_at(int); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#119
  def seconds_from(obj); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#132
  def strip_port(str); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#113
Selenium::WebDriver::Manager::SECONDS_PER_DAY = T.let(T.unsafe(nil), Float)

# source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#22
class Selenium::WebDriver::Navigation
  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#23
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#39
  def back; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#47
  def forward; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#55
  def refresh; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#31
  def to(url); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#22
class Selenium::WebDriver::Options
  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#69
  def initialize(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#98
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#87
  def add_option(name, value = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#110
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#98
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#67
  def options; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#67
  def options=(_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#194
  def camel_case(str); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#158
  def camelize?(_key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#186
  def convert_json_key(key, camelize: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#162
  def generate_as_json(value, camelize_keys: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#154
  def process_browser_options(_browser_options); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#176
  def process_json_hash(value, camelize_keys); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#147
  def process_w3c_options(options); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#143
  def w3c?(key); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#30
    def chrome(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#28
    def driver_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#43
    def edge(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#34
    def firefox(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#38
    def ie(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#38
    def internet_explorer(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#43
    def microsoftedge(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#48
    def safari(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#52
    def set_capabilities; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#23
Selenium::WebDriver::Options::W3C_OPTIONS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#26
module Selenium::WebDriver::Platform
  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#147
  def assert_executable(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#141
  def assert_file(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#65
  def bitsize; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#53
  def ci; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#110
  def cygwin?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#122
  def cygwin_path(path, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#33
  def engine; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#155
  def exit_hook; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#161
  def find_binary(*binary_names); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#181
  def find_in_program_files(*binary_names); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#29
  def home; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#222
  def interfaces; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#206
  def ip; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#77
  def jruby?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#97
  def linux?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#198
  def localhost; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#93
  def mac?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#137
  def make_writable(file); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#114
  def null_device; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#37
  def os; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#85
  def ruby_version; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#81
  def truffleruby?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#129
  def unix_path(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#89
  def windows?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#133
  def windows_path(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#118
  def wrap_in_quotes_if_necessary(str); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#101
  def wsl?; end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#147
    def assert_executable(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#141
    def assert_file(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#65
    def bitsize; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#53
    def ci; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#110
    def cygwin?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#122
    def cygwin_path(path, **opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#33
    def engine; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#155
    def exit_hook; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#161
    def find_binary(*binary_names); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#181
    def find_in_program_files(*binary_names); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#29
    def home; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#222
    def interfaces; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#206
    def ip; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#77
    def jruby?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#97
    def linux?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#198
    def localhost; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#93
    def mac?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#137
    def make_writable(file); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#114
    def null_device; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#37
    def os; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#85
    def ruby_version; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#81
    def truffleruby?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#129
    def unix_path(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#89
    def windows?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#133
    def windows_path(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#118
    def wrap_in_quotes_if_necessary(str); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#101
    def wsl?; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver.rb#33
class Selenium::WebDriver::Point < ::Struct
  def x; end
  def x=(_); end
  def y; end
  def y=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#22
module Selenium::WebDriver::PointerActions
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#227
  def click(element = T.unsafe(nil), button: T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#181
  def click_and_hold(element = T.unsafe(nil), button: T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#284
  def context_click(element = T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#30
  def default_move_duration; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#23
  def default_move_duration=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#256
  def double_click(element = T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#307
  def drag_and_drop(source, target, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#331
  def drag_and_drop_by(source, right_by, down_by, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#126
  def move_by(right_by, down_by, device: T.unsafe(nil), duration: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#98
  def move_to(element, right_by = T.unsafe(nil), down_by = T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#154
  def move_to_location(x, y, device: T.unsafe(nil), duration: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#49
  def pointer_down(button = T.unsafe(nil), device: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#66
  def pointer_up(button = T.unsafe(nil), device: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#200
  def release(button: T.unsafe(nil), device: T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#340
  def button_action(button, action, device: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#347
  def pointer_input(name = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/port_prober.rb#22
class Selenium::WebDriver::PortProber
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/port_prober.rb#23
    def above(port); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/port_prober.rb#33
    def free?(port); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/port_prober.rb#28
Selenium::WebDriver::PortProber::IGNORED_ERRORS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#29
module Selenium::WebDriver::ProfileHelper
  mixes_in_class_methods ::Selenium::WebDriver::ProfileHelper::ClassMethods

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#42
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#38
  def encoded; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#46
  def to_json(*_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#52
  def create_tmp_copy(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#63
  def verify_model(model); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#34
    def decoded(json); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#30
    def included(base); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#72
module Selenium::WebDriver::ProfileHelper::ClassMethods
  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#73
  def from_json(json); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#22
class Selenium::WebDriver::Proxy
  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#58
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#74
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#142
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def auto_detect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#104
  def auto_detect=(bool); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#74
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def ftp; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#79
  def ftp=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def http; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#84
  def http=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def no_proxy; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#89
  def no_proxy=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def pac; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#99
  def pac=(url); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def socks; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#109
  def socks=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def socks_password; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#119
  def socks_password=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def socks_username; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#114
  def socks_username=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def socks_version; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#124
  def socks_version=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def ssl; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#94
  def ssl=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#160
  def to_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def type; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#129
  def type=(type); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#45
    def json_create(data); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#31
Selenium::WebDriver::Proxy::ALLOWED = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#23
Selenium::WebDriver::Proxy::TYPES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver.rb#35
class Selenium::WebDriver::Rectangle < ::Struct
  def height; end
  def height=(_); end
  def width; end
  def width=(_); end
  def x; end
  def x=(_); end
  def y; end
  def y=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote.rb#25
module Selenium::WebDriver::Remote; end

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#23
class Selenium::WebDriver::Remote::Bridge
  include ::Selenium::WebDriver::Atoms

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#39
  def initialize(url:, http_client: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#113
  def accept_alert; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#372
  def action(async: T.unsafe(nil), devices: T.unsafe(nil), duration: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#372
  def actions(async: T.unsafe(nil), devices: T.unsafe(nil), duration: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#518
  def active_element; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#348
  def add_cookie(cookie); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#578
  def add_credential(credential, id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#569
  def add_virtual_authenticator(options); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#121
  def alert=(keys); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#125
  def alert_text; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#82
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#30
  def capabilities; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#417
  def clear_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#294
  def clear_local_storage; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#318
  def clear_session_storage; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#389
  def click_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#193
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#356
  def cookie(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#360
  def cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#52
  def create_session(capabilities); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#582
  def credentials(authenticator_id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#364
  def delete_all_cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#352
  def delete_cookie(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#117
  def dismiss_alert; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#462
  def element_aria_label(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#458
  def element_aria_role(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#445
  def element_attribute(element, name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#505
  def element_displayed?(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#450
  def element_dom_attribute(element, name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#497
  def element_enabled?(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#474
  def element_location(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#486
  def element_location_once_scrolled_into_view(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#454
  def element_property(element, name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#480
  def element_rect(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#270
  def element_screenshot(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#501
  def element_selected?(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#491
  def element_size(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#441
  def element_tag_name(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#470
  def element_text(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#466
  def element_value(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#510
  def element_value_of_css_property(element, prop); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#335
  def execute_async_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#330
  def execute_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#29
  def file_detector; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#29
  def file_detector=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#524
  def find_element_by(how, what, parent_ref = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#542
  def find_elements_by(how, what, parent_ref = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#242
  def full_screen_window; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#93
  def get(url); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#133
  def go_back; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#137
  def go_forward; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#29
  def http; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#29
  def http=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#278
  def local_storage_item(key, value = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#290
  def local_storage_keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#298
  def local_storage_size; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#344
  def manage; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#233
  def maximize_window(handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#229
  def minimize_window; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#163
  def new_window(type); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#149
  def page_source; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#385
  def print_page(options = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#186
  def quit; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#197
  def refresh; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#381
  def release_actions; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#590
  def remove_all_credentials(authenticator_id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#586
  def remove_credential(credential_id, authenticator_id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#286
  def remove_local_storage_item(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#310
  def remove_session_storage_item(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#574
  def remove_virtual_authenticator(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#246
  def reposition_window(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#213
  def resize_window(width, height, handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#266
  def screenshot; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#377
  def send_actions(data); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#393
  def send_keys_to_element(element, keys); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#78
  def session_id; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#302
  def session_storage_item(key, value = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#314
  def session_storage_keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#322
  def session_storage_size; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#255
  def set_window_rect(x: T.unsafe(nil), y: T.unsafe(nil), width: T.unsafe(nil), height: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#560
  def shadow_root(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#89
  def status; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#421
  def submit_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#518
  def switch_to_active_element; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#180
  def switch_to_default_content; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#171
  def switch_to_frame(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#176
  def switch_to_parent_frame; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#167
  def switch_to_window(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#101
  def timeouts; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#105
  def timeouts=(timeouts); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#145
  def title; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#408
  def upload(local_file); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#141
  def url; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#594
  def user_verified(verified, authenticator_id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#209
  def window_handle; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#205
  def window_handles; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#250
  def window_position; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#261
  def window_rect; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#219
  def window_size(handle = T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#626
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#660
  def convert_locator(how, what); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#647
  def element_id_from(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#690
  def escape_css(string); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#622
  def escaper; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#606
  def execute(command, opts = T.unsafe(nil), command_hash = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#655
  def prepare_capabilities_payload(capabilities); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#651
  def shadow_root_id_from(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#630
  def unwrap_script_result(arg); end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge/commands.rb#29
Selenium::WebDriver::Remote::Bridge::COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#685
Selenium::WebDriver::Remote::Bridge::ESCAPE_CSS_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#27
Selenium::WebDriver::Remote::Bridge::PORT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#184
Selenium::WebDriver::Remote::Bridge::QUIT_ERRORS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#686
Selenium::WebDriver::Remote::Bridge::UNICODE_CODE_POINT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#28
class Selenium::WebDriver::Remote::Capabilities
  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#199
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#288
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#213
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#209
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def accept_insecure_certs; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def accept_insecure_certs=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#278
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def browser_name; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def browser_name=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def browser_version; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def browser_version=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#288
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#250
  def implicit_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#254
  def implicit_timeout=(timeout); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#217
  def merge!(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def page_load_strategy; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def page_load_strategy=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#258
  def page_load_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#262
  def page_load_timeout=(timeout); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#70
  def platform; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#75
  def platform=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def platform_name; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def platform_name=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#227
  def proxy; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#231
  def proxy=(proxy); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def remote_session_id; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def remote_session_id=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#266
  def script_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#270
  def script_timeout=(timeout); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def set_window_rect; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def set_window_rect=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def strict_file_interactability; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def strict_file_interactability=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#242
  def timeouts; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#246
  def timeouts=(timeouts); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#284
  def to_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def unhandled_prompt_behavior; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def unhandled_prompt_behavior=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#60
  def version; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#65
  def version=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#47
  def web_socket_url; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#51
  def web_socket_url=(value); end

  protected

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#298
  def capabilities; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#317
  def convert_key(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#328
  def convert_value(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#302
  def process_capabilities(key, value, hash); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#133
    def always_match(capabilities); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#173
    def camel_case(str_or_sym); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#85
    def chrome(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#92
    def edge(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#100
    def ff(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#100
    def firefox(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#137
    def first_match(*capabilities); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#115
    def htmlunit(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#124
    def ie(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#124
    def internet_explorer(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#145
    def json_create(data); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#92
    def microsoftedge(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#108
    def safari(opts = T.unsafe(nil)); end

    private

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#179
    def process_timeouts(caps, timeouts); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#29
Selenium::WebDriver::Remote::Capabilities::KNOWN = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/remote/driver.rb#28
class Selenium::WebDriver::Remote::Driver < ::Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::DriverExtensions::UploadsFiles
  include ::Selenium::WebDriver::DriverExtensions::HasSessionId

  # source://selenium-webdriver//lib/selenium/webdriver/remote/driver.rb#32
  def initialize(capabilities: T.unsafe(nil), options: T.unsafe(nil), service: T.unsafe(nil), url: T.unsafe(nil), **opts); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/driver.rb#43
  def devtools_url; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/driver.rb#47
  def devtools_version; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/driver.rb#52
  def process_options(options, capabilities); end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote.rb#31
module Selenium::WebDriver::Remote::Http; end

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#24
class Selenium::WebDriver::Remote::Http::Common
  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#43
  def call(verb, url, command_hash); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#39
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#35
  def quit_errors; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#33
  def server_url=(_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#74
  def create_response(code, body, content_type); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#70
  def request(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#64
  def server_url; end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#26
Selenium::WebDriver::Remote::Http::Common::CONTENT_TYPE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#27
Selenium::WebDriver::Remote::Http::Common::DEFAULT_HEADERS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#25
Selenium::WebDriver::Remote::Http::Common::MAX_REDIRECTS = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#28
class Selenium::WebDriver::Remote::Http::Default < ::Selenium::WebDriver::Remote::Http::Common
  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#38
  def initialize(open_timeout: T.unsafe(nil), read_timeout: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#44
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#31
  def open_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#31
  def open_timeout=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#29
  def proxy=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#31
  def read_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#31
  def read_timeout=(_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#50
  def http; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#122
  def new_http_client; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#108
  def new_request_for(verb, url, headers, payload); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#138
  def proxy; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#72
  def request(verb, url, headers, payload, redirects = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#118
  def response_for(request); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#66
  def start(http); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#150
  def use_proxy?; end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#70
Selenium::WebDriver::Remote::Http::Default::MAX_RETRIES = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#27
class Selenium::WebDriver::Remote::Response
  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#30
  def initialize(code, payload = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#48
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#28
  def code; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#37
  def error; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#28
  def payload; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#62
  def add_backtrace(ex, server_trace); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#54
  def assert_ok; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#75
  def backtrace_from_remote(server_trace); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#92
  def process_error; end
end

# source://selenium-webdriver//lib/selenium/webdriver/safari.rb#22
module Selenium::WebDriver::Safari
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#49
    def path; end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#44
    def path=(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#31
    def technology_preview; end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#35
    def technology_preview!; end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#40
    def technology_preview?; end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#29
    def use_technology_preview; end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#29
    def use_technology_preview=(_arg0); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#28
class Selenium::WebDriver::Safari::Driver < ::Selenium::WebDriver::Driver
  # source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#33
  def initialize(capabilities: T.unsafe(nil), options: T.unsafe(nil), service: T.unsafe(nil), url: T.unsafe(nil), **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#41
  def browser; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#47
  def process_options(options, capabilities); end
end

# source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#29
Selenium::WebDriver::Safari::Driver::EXTENSIONS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/safari/features.rb#23
module Selenium::WebDriver::Safari::Features
  # source://selenium-webdriver//lib/selenium/webdriver/safari/features.rb#43
  def attach_debugger; end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/features.rb#31
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/features.rb#35
  def permissions; end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/features.rb#39
  def permissions=(permissions); end
end

# source://selenium-webdriver//lib/selenium/webdriver/safari/features.rb#25
Selenium::WebDriver::Safari::Features::SAFARI_COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#23
class Selenium::WebDriver::Safari::Options < ::Selenium::WebDriver::Options
  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#31
  def add_option(name, value = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#38
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#24
  def options; end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#24
  def options=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#29
Selenium::WebDriver::Safari::Options::BROWSER = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#27
Selenium::WebDriver::Safari::Options::CAPABILITIES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/safari/service.rb#23
class Selenium::WebDriver::Safari::Service < ::Selenium::WebDriver::Service; end

# source://selenium-webdriver//lib/selenium/webdriver/safari/service.rb#24
Selenium::WebDriver::Safari::Service::DEFAULT_PORT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/safari/service.rb#25
Selenium::WebDriver::Safari::Service::EXECUTABLE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/safari/service.rb#26
Selenium::WebDriver::Safari::Service::MISSING_TEXT = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/safari/service.rb#30
Selenium::WebDriver::Safari::Service::SHUTDOWN_SUPPORTED = T.let(T.unsafe(nil), FalseClass)

# source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#22
module Selenium::WebDriver::SearchContext
  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#57
  def find_element(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#72
  def find_elements(*args); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#83
  def extract_args(args); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#24
Selenium::WebDriver::SearchContext::FINDERS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/selenium_manager.rb#29
class Selenium::WebDriver::SeleniumManager
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/selenium_manager.rb#35
    def driver_path(driver_name); end

    private

    # source://selenium-webdriver//lib/selenium/webdriver/common/selenium_manager.rb#51
    def binary; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/selenium_manager.rb#71
    def run(command); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/selenium_manager.rb#30
Selenium::WebDriver::SeleniumManager::BIN_PATH = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#27
class Selenium::WebDriver::Service
  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#69
  def initialize(path: T.unsafe(nil), port: T.unsafe(nil), args: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#60
  def args; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#60
  def args=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#60
  def executable_path; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#60
  def executable_path=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#60
  def extra_args; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#60
  def host; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#60
  def host=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#83
  def launch; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#60
  def port; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#60
  def port=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#87
  def shutdown_supported; end

  protected

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#93
  def extract_service_args(driver_opts); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#102
  def binary_path(path = T.unsafe(nil)); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#31
    def chrome(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#29
    def driver_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#54
    def driver_path=(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#44
    def edge(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#35
    def firefox(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#39
    def ie(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#39
    def internet_explorer(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#44
    def microsoftedge(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#44
    def msedge(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#50
    def safari(**opts); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#28
class Selenium::WebDriver::ServiceManager
  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#39
  def initialize(config); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#49
  def start; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#61
  def stop; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#73
  def uri; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#79
  def build_process(*command); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#133
  def cannot_connect_error_text; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#87
  def connect_to_server; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#126
  def connect_until_stable; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#96
  def find_free_port; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#122
  def process_exited?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#118
  def process_running?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#137
  def socket_lock; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#100
  def start_process; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#105
  def stop_process; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#111
  def stop_server; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#30
Selenium::WebDriver::ServiceManager::SOCKET_LOCK_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#29
Selenium::WebDriver::ServiceManager::START_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/service_manager.rb#31
Selenium::WebDriver::ServiceManager::STOP_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#22
class Selenium::WebDriver::ShadowRoot
  include ::Selenium::WebDriver::SearchContext

  # source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#33
  def initialize(bridge, id); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#42
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#77
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#42
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#47
  def hash; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#38
  def inspect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#56
  def ref; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#67
  def to_json(*_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#83
  def bridge; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/shadow_root.rb#23
Selenium::WebDriver::ShadowRoot::ROOT_KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#26
class Selenium::WebDriver::SocketLock
  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#27
  def initialize(port, timeout); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#38
  def locked; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#68
  def can_lock?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#60
  def current_time; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#77
  def did_lock?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#50
  def lock; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#64
  def release; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#25
class Selenium::WebDriver::SocketPoller
  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#26
  def initialize(host, port, timeout = T.unsafe(nil), interval = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#51
  def closed?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#40
  def connected?; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#105
  def conn_completed?(sock); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#121
  def current_time; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#78
  def listening?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#101
  def socket_writable?(sock); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#109
  def with_timeout; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#63
Selenium::WebDriver::SocketPoller::CONNECTED_ERRORS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#57
Selenium::WebDriver::SocketPoller::CONNECT_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#59
Selenium::WebDriver::SocketPoller::NOT_CONNECTED_ERRORS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#22
module Selenium::WebDriver::Support; end

# source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#48
class Selenium::WebDriver::Support::AbstractEventListener
  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#71
  def after_change_value_of(element, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#67
  def after_click(element, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#83
  def after_close(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#75
  def after_execute_script(script, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#63
  def after_find(by, what, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#55
  def after_navigate_back(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#59
  def after_navigate_forward(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#51
  def after_navigate_to(url, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#79
  def after_quit(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#69
  def before_change_value_of(element, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#65
  def before_click(element, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#81
  def before_close(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#73
  def before_execute_script(script, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#61
  def before_find(by, what, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#53
  def before_navigate_back(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#57
  def before_navigate_forward(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#49
  def before_navigate_to(url, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#77
  def before_quit(driver); end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/block_event_listener.rb#23
class Selenium::WebDriver::Support::BlockEventListener
  # source://selenium-webdriver//lib/selenium/webdriver/support/block_event_listener.rb#24
  def initialize(callback); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/block_event_listener.rb#28
  def method_missing(meth, *args); end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#23
class Selenium::WebDriver::Support::Color
  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#112
  def initialize(red, green, blue, alpha = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#119
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#48
  def alpha; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#48
  def blue; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#119
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#48
  def green; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#127
  def hash; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#140
  def hex; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#48
  def red; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#131
  def rgb; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#135
  def rgba; end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#75
    def from_hsl(h, s, l, a); end

    # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#50
    def from_string(str); end

    # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#97
    def hue_to_rgb(lum1, lum2, hue); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#39
Selenium::WebDriver::Support::Color::HEX3_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#38
Selenium::WebDriver::Support::Color::HEX_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#43
Selenium::WebDriver::Support::Color::HSLA_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#40
Selenium::WebDriver::Support::Color::HSL_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#30
Selenium::WebDriver::Support::Color::RGBA_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#34
Selenium::WebDriver::Support::Color::RGBA_PCT_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#24
Selenium::WebDriver::Support::Color::RGB_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#27
Selenium::WebDriver::Support::Color::RGB_PCT_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/escaper.rb#23
module Selenium::WebDriver::Support::Escaper
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/support/escaper.rb#24
    def escape(str); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#27
class Selenium::WebDriver::Support::EventFiringBridge
  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#28
  def initialize(delegate, listener); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#62
  def clear_element(ref); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#56
  def click_element(ref); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#100
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#90
  def execute_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#74
  def find_element_by(how, what, parent = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#82
  def find_elements_by(how, what, parent = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#38
  def get(url); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#50
  def go_back; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#44
  def go_forward; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#96
  def quit; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#68
  def send_keys_to_element(ref, keys); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#106
  def create_element(ref); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#115
  def dispatch(name, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#111
  def driver; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#123
  def method_missing(meth, *args, &blk); end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/relative_locator.rb#27
class Selenium::WebDriver::Support::RelativeLocator
  # source://selenium-webdriver//lib/selenium/webdriver/support/relative_locator.rb#30
  def initialize(locator); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/relative_locator.rb#34
  def as_json; end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/relative_locator.rb#28
Selenium::WebDriver::Support::RelativeLocator::KEYS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#23
class Selenium::WebDriver::Support::Select
  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#28
  def initialize(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#155
  def deselect_all; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#124
  def deselect_by(how, what); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#74
  def first_selected_option; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#43
  def multiple?; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#53
  def options; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#143
  def select_all; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#101
  def select_by(how, what); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#63
  def selected_options; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#207
  def deselect_by_index(index); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#187
  def deselect_by_text(text); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#197
  def deselect_by_value(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#223
  def deselect_option(option); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#235
  def deselect_options(opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#262
  def find_by_index(index); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#243
  def find_by_text(text); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#266
  def find_by_value(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#171
  def select_by_index(index); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#163
  def select_by_text(text); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#179
  def select_by_value(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#217
  def select_option(option); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#227
  def select_options(opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/takes_screenshot.rb#25
module Selenium::WebDriver::TakesScreenshot
  # source://selenium-webdriver//lib/selenium/webdriver/common/takes_screenshot.rb#32
  def save_screenshot(png_path, full_page: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/takes_screenshot.rb#51
  def screenshot_as(format, full_page: T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#22
class Selenium::WebDriver::TargetLocator
  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#27
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#117
  def active_element; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#133
  def alert; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#125
  def default_content; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#35
  def frame(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#53
  def new_window(type = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#43
  def parent_frame; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#84
  def window(id); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#22
class Selenium::WebDriver::Timeouts
  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#23
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#31
  def implicit_wait; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#39
  def implicit_wait=(seconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#68
  def page_load; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#77
  def page_load=(seconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#48
  def script; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#59
  def script=(seconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#48
  def script_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#59
  def script_timeout=(seconds); end
end

# source://selenium-webdriver//lib/selenium/webdriver/version.rb#22
Selenium::WebDriver::VERSION = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#22
class Selenium::WebDriver::VirtualAuthenticator
  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#30
  def initialize(bridge, authenticator_id, options); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#37
  def add_credential(credential); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#42
  def credentials; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#23
  def options; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#62
  def remove!; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#54
  def remove_all_credentials; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#49
  def remove_credential(credential_id); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#58
  def user_verified=(verified); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator.rb#67
  def valid?; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#27
class Selenium::WebDriver::VirtualAuthenticatorOptions
  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#37
  def initialize(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#52
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def protocol; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def protocol=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def resident_key; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def resident_key=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def resident_key?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def transport; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def transport=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def user_consenting; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def user_consenting=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def user_consenting?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def user_verification; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def user_verification=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def user_verification?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def user_verified; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def user_verified=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#31
  def user_verified?; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#28
Selenium::WebDriver::VirtualAuthenticatorOptions::PROTOCOL = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/virtual_authenticator/virtual_authenticator_options.rb#29
Selenium::WebDriver::VirtualAuthenticatorOptions::TRANSPORT = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#22
class Selenium::WebDriver::Wait
  # source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#36
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#50
  def until; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#78
  def current_time; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#24
Selenium::WebDriver::Wait::DEFAULT_INTERVAL = T.let(T.unsafe(nil), Float)

# source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#23
Selenium::WebDriver::Wait::DEFAULT_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#24
class Selenium::WebDriver::WebSocketConnection
  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#35
  def initialize(url:); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#51
  def callbacks; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#45
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#55
  def send_cmd(**payload); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#80
  def attach_socket_listener; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#120
  def callback_thread(params); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#103
  def incoming_frame; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#71
  def messages; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#158
  def next_id; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#107
  def process_frame(frame); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#75
  def process_handshake; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#141
  def socket; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#137
  def wait; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#154
  def ws; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#25
Selenium::WebDriver::WebSocketConnection::CONNECTION_ERRORS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#33
Selenium::WebDriver::WebSocketConnection::MAX_LOG_MESSAGE_SIZE = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#31
Selenium::WebDriver::WebSocketConnection::RESPONSE_WAIT_INTERVAL = T.let(T.unsafe(nil), Float)

# source://selenium-webdriver//lib/selenium/webdriver/common/websocket_connection.rb#30
Selenium::WebDriver::WebSocketConnection::RESPONSE_WAIT_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll_origin.rb#22
module Selenium::WebDriver::WheelActions
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_actions.rb#30
  def default_scroll_duration; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_actions.rb#23
  def default_scroll_duration=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_actions.rb#57
  def scroll_by(delta_x, delta_y, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_actions.rb#87
  def scroll_from(scroll_origin, delta_x, delta_y, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_actions.rb#43
  def scroll_to(element, device: T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_actions.rb#100
  def scroll(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/wheel_actions.rb#108
  def wheel_input(name = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll_origin.rb#23
class Selenium::WebDriver::WheelActions::ScrollOrigin
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll_origin.rb#40
  def initialize(origin, x_offset, y_offset); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll_origin.rb#34
  def origin; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll_origin.rb#34
  def x_offset; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll_origin.rb#34
  def y_offset; end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll_origin.rb#25
    def element(element, x_offset = T.unsafe(nil), y_offset = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/scroll_origin.rb#29
    def viewport(x_offset = T.unsafe(nil), y_offset = T.unsafe(nil)); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#22
class Selenium::WebDriver::Window
  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#27
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#154
  def full_screen; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#138
  def maximize; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#146
  def minimize; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#130
  def move_to(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#77
  def position; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#62
  def position=(point); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#105
  def rect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#87
  def rect=(rectangle); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#118
  def resize_to(width, height); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#52
  def size; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#37
  def size=(dimension); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#31
module Selenium::WebDriver::Zipper
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#35
    def unzip(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#52
    def zip(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#63
    def zip_file(path); end

    private

    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#82
    def add_zip_entry(zip, file, entry_name); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#74
    def with_tmp_zip(&blk); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#32
Selenium::WebDriver::Zipper::EXTENSIONS = T.let(T.unsafe(nil), Array)
